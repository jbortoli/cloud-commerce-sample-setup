{"version":3,"file":"default-node_modules_spartacus_cart_fesm2020_spartacus-cart-base-components-add-to-cart_mjs.js","mappings":"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","sources":["./node_modules/@spartacus/cart/fesm2020/spartacus-cart-base-components-add-to-cart.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { ComponentRef, Component, ChangeDetectionStrategy, Optional, Input, NgModule } from '@angular/core';\nimport * as i5 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormControl, ReactiveFormsModule } from '@angular/forms';\nimport * as i2 from '@spartacus/cart/base/root';\nimport { CartOutlets, CartUiEventAddToCart } from '@spartacus/cart/base/root';\nimport * as i3 from '@spartacus/core';\nimport { isNotNullable, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport * as i1 from '@spartacus/storefront';\nimport { ICON_TYPE, IconModule, ItemCounterModule, OutletModule } from '@spartacus/storefront';\nimport { map, filter, take } from 'rxjs/operators';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass AddToCartComponent {\n    constructor(currentProductService, cd, activeCartService, component, eventService, productListItemContext) {\n        this.currentProductService = currentProductService;\n        this.cd = cd;\n        this.activeCartService = activeCartService;\n        this.component = component;\n        this.eventService = eventService;\n        this.productListItemContext = productListItemContext;\n        this.showQuantity = true;\n        this.hasStock = false;\n        this.inventoryThreshold = false;\n        this.showInventory$ = this.component?.data$.pipe(map((data) => data.inventoryDisplay));\n        this.quantity = 1;\n        this.addToCartForm = new UntypedFormGroup({\n            quantity: new UntypedFormControl(1, { updateOn: 'blur' }),\n        });\n        this.CartOutlets = CartOutlets;\n        this.iconTypes = ICON_TYPE;\n    }\n    ngOnInit() {\n        if (this.product) {\n            this.productCode = this.product.code ?? '';\n            this.setStockInfo(this.product);\n            this.cd.markForCheck();\n        }\n        else if (this.productCode) {\n            // force hasStock and quantity for the time being, as we do not have more info:\n            this.quantity = 1;\n            this.hasStock = true;\n            this.cd.markForCheck();\n        }\n        else {\n            this.subscription = (this.productListItemContext\n                ? this.productListItemContext.product$\n                : this.currentProductService.getProduct())\n                .pipe(filter(isNotNullable))\n                .subscribe((product) => {\n                this.productCode = product.code ?? '';\n                this.setStockInfo(product);\n                this.cd.markForCheck();\n            });\n        }\n    }\n    setStockInfo(product) {\n        this.quantity = 1;\n        this.addToCartForm.controls['quantity'].setValue(1);\n        this.hasStock = Boolean(product.stock?.stockLevelStatus !== 'outOfStock');\n        this.inventoryThreshold = product.stock?.isValueRounded ?? false;\n        if (this.hasStock && product.stock?.stockLevel) {\n            this.maxQuantity = product.stock.stockLevel;\n        }\n        if (this.productListItemContext) {\n            this.showQuantity = false;\n        }\n    }\n    /**\n     * In specific scenarios, we need to omit displaying the stock level or append a plus to the value.\n     * When backoffice forces a product to be in stock, omit showing the stock level.\n     * When product stock level is limited by a threshold value, append '+' at the end.\n     * When out of stock, display no numerical value.\n     */\n    getInventory() {\n        if (this.hasStock) {\n            const quantityDisplay = this.maxQuantity\n                ? this.maxQuantity.toString()\n                : '';\n            return this.inventoryThreshold ? quantityDisplay + '+' : quantityDisplay;\n        }\n        else {\n            return '';\n        }\n    }\n    updateCount(value) {\n        this.quantity = value;\n    }\n    addToCart() {\n        const quantity = this.addToCartForm.get('quantity')?.value;\n        if (!this.productCode || quantity <= 0) {\n            return;\n        }\n        if (this.pickupOptionCompRef instanceof ComponentRef) {\n            this.pickupOptionCompRef.instance.intendedPickupLocation$\n                .pipe(take(1))\n                .subscribe((intendedPickupLocation) => {\n                this.pickupStore =\n                    intendedPickupLocation?.pickupOption === 'pickup'\n                        ? intendedPickupLocation.name\n                        : undefined;\n            });\n        }\n        this.activeCartService\n            .getEntries()\n            .pipe(take(1))\n            .subscribe((cartEntries) => {\n            this.activeCartService.addEntry(this.productCode, quantity, this.pickupStore);\n            // A CartUiEventAddToCart is dispatched.  This event is intended for the UI\n            // responsible to provide feedback about what was added to the cart, like\n            // the added to cart dialog.\n            //\n            // Because we call activeCartService.getEntries() before, we can be sure the\n            // cart library is loaded already and that the event listener exists.\n            this.eventService.dispatch(this.createCartUiEventAddToCart(this.productCode, quantity, cartEntries.length, this.pickupStore));\n        });\n    }\n    createCartUiEventAddToCart(productCode, quantity, numberOfEntriesBeforeAdd, storeName) {\n        const newEvent = new CartUiEventAddToCart();\n        newEvent.productCode = productCode;\n        newEvent.quantity = quantity;\n        newEvent.numberOfEntriesBeforeAdd = numberOfEntriesBeforeAdd;\n        newEvent.pickupStoreName = storeName;\n        return newEvent;\n    }\n    ngOnDestroy() {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n}\nAddToCartComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartComponent, deps: [{ token: i1.CurrentProductService }, { token: i0.ChangeDetectorRef }, { token: i2.ActiveCartFacade }, { token: i1.CmsComponentData }, { token: i3.EventService }, { token: i1.ProductListItemContext, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nAddToCartComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: AddToCartComponent, selector: \"cx-add-to-cart\", inputs: { productCode: \"productCode\", showQuantity: \"showQuantity\", options: \"options\", pickupStore: \"pickupStore\", product: \"product\" }, ngImport: i0, template: \"<form *ngIf=\\\"productCode\\\" [formGroup]=\\\"addToCartForm\\\" (submit)=\\\"addToCart()\\\">\\n  <div class=\\\"quantity\\\" *ngIf=\\\"showQuantity\\\">\\n    <label>{{ 'addToCart.quantity' | cxTranslate }}</label>\\n    <div class=\\\"cx-counter-stock\\\">\\n      <cx-item-counter\\n        *ngIf=\\\"hasStock\\\"\\n        [max]=\\\"maxQuantity\\\"\\n        [control]=\\\"addToCartForm.get('quantity')\\\"\\n      ></cx-item-counter>\\n\\n      <span class=\\\"info\\\">\\n        <span *ngIf=\\\"showInventory$ | async\\\">{{ getInventory() }}</span>\\n        {{\\n          hasStock\\n            ? ('addToCart.inStock' | cxTranslate)\\n            : ('addToCart.outOfStock' | cxTranslate)\\n        }}</span\\n      >\\n    </div>\\n  </div>\\n\\n  <ng-container *ngIf=\\\"hasStock\\\">\\n    <ng-template\\n      [cxOutlet]=\\\"CartOutlets.ADD_TO_CART_PICKUP_OPTION\\\"\\n      [(cxComponentRef)]=\\\"pickupOptionCompRef\\\"\\n    ></ng-template>\\n  </ng-container>\\n\\n  <button\\n    *ngIf=\\\"hasStock\\\"\\n    [ngClass]=\\\"\\n      options?.displayAddToCart\\n        ? 'btn btn-tertiary'\\n        : 'btn btn-primary btn-block'\\n    \\\"\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"quantity <= 0 || quantity > maxQuantity\\\"\\n  >\\n    <span\\n      *ngIf=\\\"\\n        options?.addToCartString === ('addToCart.buyItAgain' | cxTranslate)\\n      \\\"\\n      class=\\\"repeat-icon\\\"\\n      ><cx-icon [type]=\\\"iconTypes.REPEAT\\\"></cx-icon\\n    ></span>\\n    <span\\n      attr.aria-label=\\\"{{\\n        options?.addToCartString ?? ('addToCart.addToCart' | cxTranslate)\\n      }}\\\"\\n      [ngClass]=\\\"\\n        options?.addToCartString === ('addToCart.buyItAgain' | cxTranslate)\\n          ? 'buyItAgainLink'\\n          : ''\\n      \\\"\\n    >\\n      {{ options?.addToCartString ?? ('addToCart.addToCart' | cxTranslate) }}\\n    </span>\\n  </button>\\n</form>\\n\", dependencies: [{ kind: \"directive\", type: i4.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i5.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i5.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i5.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"component\", type: i1.IconComponent, selector: \"cx-icon,[cxIcon]\", inputs: [\"cxIcon\", \"type\"] }, { kind: \"component\", type: i1.ItemCounterComponent, selector: \"cx-item-counter\", inputs: [\"control\", \"min\", \"max\", \"step\", \"allowZero\", \"readonly\"] }, { kind: \"directive\", type: i1.OutletDirective, selector: \"[cxOutlet]\", inputs: [\"cxOutlet\", \"cxOutletContext\", \"cxOutletDefer\", \"cxComponentRef\"], outputs: [\"loaded\", \"cxComponentRefChange\"] }, { kind: \"pipe\", type: i4.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i3.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-add-to-cart', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<form *ngIf=\\\"productCode\\\" [formGroup]=\\\"addToCartForm\\\" (submit)=\\\"addToCart()\\\">\\n  <div class=\\\"quantity\\\" *ngIf=\\\"showQuantity\\\">\\n    <label>{{ 'addToCart.quantity' | cxTranslate }}</label>\\n    <div class=\\\"cx-counter-stock\\\">\\n      <cx-item-counter\\n        *ngIf=\\\"hasStock\\\"\\n        [max]=\\\"maxQuantity\\\"\\n        [control]=\\\"addToCartForm.get('quantity')\\\"\\n      ></cx-item-counter>\\n\\n      <span class=\\\"info\\\">\\n        <span *ngIf=\\\"showInventory$ | async\\\">{{ getInventory() }}</span>\\n        {{\\n          hasStock\\n            ? ('addToCart.inStock' | cxTranslate)\\n            : ('addToCart.outOfStock' | cxTranslate)\\n        }}</span\\n      >\\n    </div>\\n  </div>\\n\\n  <ng-container *ngIf=\\\"hasStock\\\">\\n    <ng-template\\n      [cxOutlet]=\\\"CartOutlets.ADD_TO_CART_PICKUP_OPTION\\\"\\n      [(cxComponentRef)]=\\\"pickupOptionCompRef\\\"\\n    ></ng-template>\\n  </ng-container>\\n\\n  <button\\n    *ngIf=\\\"hasStock\\\"\\n    [ngClass]=\\\"\\n      options?.displayAddToCart\\n        ? 'btn btn-tertiary'\\n        : 'btn btn-primary btn-block'\\n    \\\"\\n    type=\\\"submit\\\"\\n    [disabled]=\\\"quantity <= 0 || quantity > maxQuantity\\\"\\n  >\\n    <span\\n      *ngIf=\\\"\\n        options?.addToCartString === ('addToCart.buyItAgain' | cxTranslate)\\n      \\\"\\n      class=\\\"repeat-icon\\\"\\n      ><cx-icon [type]=\\\"iconTypes.REPEAT\\\"></cx-icon\\n    ></span>\\n    <span\\n      attr.aria-label=\\\"{{\\n        options?.addToCartString ?? ('addToCart.addToCart' | cxTranslate)\\n      }}\\\"\\n      [ngClass]=\\\"\\n        options?.addToCartString === ('addToCart.buyItAgain' | cxTranslate)\\n          ? 'buyItAgainLink'\\n          : ''\\n      \\\"\\n    >\\n      {{ options?.addToCartString ?? ('addToCart.addToCart' | cxTranslate) }}\\n    </span>\\n  </button>\\n</form>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1.CurrentProductService }, { type: i0.ChangeDetectorRef }, { type: i2.ActiveCartFacade }, { type: i1.CmsComponentData }, { type: i3.EventService }, { type: i1.ProductListItemContext, decorators: [{\n                    type: Optional\n                }] }]; }, propDecorators: { productCode: [{\n                type: Input\n            }], showQuantity: [{\n                type: Input\n            }], options: [{\n                type: Input\n            }], pickupStore: [{\n                type: Input\n            }], product: [{\n                type: Input\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass AddToCartModule {\n}\nAddToCartModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAddToCartModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartModule, declarations: [AddToCartComponent], imports: [CommonModule,\n        ReactiveFormsModule,\n        I18nModule,\n        IconModule,\n        ItemCounterModule,\n        OutletModule], exports: [AddToCartComponent] });\nAddToCartModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ProductAddToCartComponent: {\n                    component: AddToCartComponent,\n                    data: {\n                        inventoryDisplay: false,\n                    },\n                },\n            },\n        }),\n    ], imports: [CommonModule,\n        ReactiveFormsModule,\n        I18nModule,\n        IconModule,\n        ItemCounterModule,\n        OutletModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: AddToCartModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                        I18nModule,\n                        IconModule,\n                        ItemCounterModule,\n                        OutletModule,\n                    ],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ProductAddToCartComponent: {\n                                    component: AddToCartComponent,\n                                    data: {\n                                        inventoryDisplay: false,\n                                    },\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [AddToCartComponent],\n                    exports: [AddToCartComponent],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AddToCartComponent, AddToCartModule };\n"],"names":["i0","ComponentRef","Component","ChangeDetectionStrategy","Optional","Input","NgModule","i5","UntypedFormGroup","UntypedFormControl","ReactiveFormsModule","i2","CartOutlets","CartUiEventAddToCart","i3","isNotNullable","I18nModule","provideDefaultConfig","i1","ICON_TYPE","IconModule","ItemCounterModule","OutletModule","map","filter","take","i4","CommonModule","AddToCartComponent","constructor","currentProductService","cd","activeCartService","component","eventService","productListItemContext","showQuantity","hasStock","inventoryThreshold","showInventory$","data$","pipe","data","inventoryDisplay","quantity","addToCartForm","updateOn","iconTypes","ngOnInit","product","productCode","code","setStockInfo","markForCheck","subscription","product$","getProduct","subscribe","controls","setValue","Boolean","stock","stockLevelStatus","isValueRounded","stockLevel","maxQuantity","getInventory","quantityDisplay","toString","updateCount","value","addToCart","get","pickupOptionCompRef","instance","intendedPickupLocation$","intendedPickupLocation","pickupStore","pickupOption","name","undefined","getEntries","cartEntries","addEntry","dispatch","createCartUiEventAddToCart","length","numberOfEntriesBeforeAdd","storeName","newEvent","pickupStoreName","ngOnDestroy","unsubscribe","ɵfac","CurrentProductService","ChangeDetectorRef","ActiveCartFacade","CmsComponentData","EventService","ProductListItemContext","ɵcmp","NgClass","NgIf","ɵNgNoValidate","NgControlStatusGroup","FormGroupDirective","IconComponent","ItemCounterComponent","OutletDirective","AsyncPipe","TranslatePipe","type","args","selector","changeDetection","OnPush","template","decorators","options","AddToCartModule","ɵmod","ɵinj","cmsComponents","ProductAddToCartComponent","imports","providers","declarations","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[0]}