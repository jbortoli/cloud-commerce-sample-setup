{"version":3,"file":"node_modules_spartacus_user_fesm2020_spartacus-user-account_mjs.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoC;AACkE;AACjE;AAC+E;AAC9E;AACuH;AACjH;AACkG;AAC7F;AACe;AAC1B;AACS;AACP;AACO;AACM;;AAErD;AACA;AACA;AACA;AACA;AAJA;EAAA;IAiD4GA,uDAAE,oBAuBiM;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAvBnMA,qEAAE,GAkI4O;IAlI9OA,4DAAE,WAkI+W;IAlIjXA,oDAAE;IAAFA,oDAAE,GAkIuZ;IAlIzZA,oDAAE;IAAFA,0DAAE,EAkIia;IAlInaA,mEAAE,EAkIob;EAAA;EAAA;IAlItbA,uDAAE,GAkI4S;IAlI9SA,wDAAE,eAAFA,yDAAE,OAAFA,6DAAE,UAkI4S;IAlI9SA,uDAAE,GAkIuZ;IAlIzZA,+DAAE,CAAFA,yDAAE,6BAkIuZ;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAlIzZA,qEAAE,GAkI+d;IAlIjeA,4DAAE,WAkIomB;IAlItmBA,oDAAE;IAAFA,oDAAE,GAkIipB;IAlInpBA,oDAAE;IAAFA,0DAAE,EAkI2pB;IAlI7pBA,mEAAE,EAkI8qB;EAAA;EAAA;IAlIhrBA,uDAAE,GAkIoiB;IAlItiBA,wDAAE,eAAFA,yDAAE,OAAFA,6DAAE,UAkIoiB;IAlItiBA,uDAAE,GAkIipB;IAlInpBA,+DAAE,CAAFA,yDAAE,kCAkIipB;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAlInpBA,qEAAE,GAyM0G;IAzM5GA,4DAAE,aAyM4I;IAzM9IA,oDAAE,GAyMuN;IAzMzNA,oDAAE;IAAFA,0DAAE,EAyM6N;IAzM/NA,uDAAE,sBAyM0S;IAzM5SA,mEAAE,EAyM2T;EAAA;EAAA;IAAA;IAzM7TA,uDAAE,GAyMuN;IAzMzNA,gEAAE,MAAFA,yDAAE,iCAAFA,6DAAE,6BAyMuN;EAAA;AAAA;AAAA;EAAA;IAAA;EAAA;AAAA;AAAA;EAAA;IAzMzNA,4DAAE,WAyMsZ;IAzMxZA,oDAAE;IAAFA,oDAAE,GAyM4c;IAzM9cA,oDAAE;IAAFA,0DAAE,EAyMgd;EAAA;EAAA;IAzMldA,wDAAE,eAAFA,yDAAE,OAAFA,6DAAE,UAyMqZ;IAzMvZA,uDAAE,GAyM4c;IAzM9cA,+DAAE,CAAFA,yDAAE,mCAyM4c;EAAA;AAAA;AArP1jB,MAAMsC,yBAAyB,CAAC;EAC5BC,WAAW,CAACC,IAAI,EAAEC,aAAa,EAAEC,MAAM,EAAE;IACrC,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAG,IAAIhB,iDAAe,CAAC,KAAK,CAAC;IACvC,IAAI,CAACiB,WAAW,GAAG,IAAI,CAACD,KAAK,CAACE,IAAI,CAACf,mDAAG,CAAEgB,KAAK,IAAK;MAC9C,MAAMC,MAAM,GAAG,IAAI,CAACL,MAAM,CAACM,YAAY,EAAEC,OAAO,EAAEH,KAAK,GAAG,QAAQ,CAAC;MACnE,IAAIC,MAAM,EAAE;QACR,IAAI,CAACG,IAAI,CAACC,UAAU,CAAC;UAAEJ;QAAO,CAAC,CAAC;MACpC;MACAD,KAAK,KAAK,IAAI,GAAG,IAAI,CAACI,IAAI,CAACE,OAAO,EAAE,GAAG,IAAI,CAACF,IAAI,CAACG,MAAM,EAAE;IAC7D,CAAC,CAAC,CAAC;IACH,IAAI,CAACH,IAAI,GAAG,IAAI3C,4DAAgB,CAAC;MAC7BwC,MAAM,EAAE,IAAIvC,8DAAkB,CAAC,EAAE,EAAE,CAC/BC,+DAAmB,EACnBa,sFAAmC,CACtC,CAAC;MACFkC,QAAQ,EAAE,IAAIhD,8DAAkB,CAAC,EAAE,EAAEC,+DAAmB;IAC5D,CAAC,CAAC;EACN;EACAgD,KAAK,GAAG;IACJ,IAAI,CAAC,IAAI,CAACP,IAAI,CAACQ,KAAK,EAAE;MAClB,IAAI,CAACR,IAAI,CAACS,gBAAgB,EAAE;MAC5B;IACJ;IACA,IAAI,CAAChB,KAAK,CAACiB,IAAI,CAAC,IAAI,CAAC;IACrBhC,0CAAI,CAAC,IAAI,CAACY,IAAI,CAACqB,oBAAoB;IACnC;IACA;IACA,IAAI,CAACX,IAAI,CAACY,KAAK,CAACf,MAAM,CAACgB,WAAW,EAAE,EAAE,IAAI,CAACb,IAAI,CAACY,KAAK,CAACN,QAAQ,CAAC,CAAC,CAC3DX,IAAI,CAACd,8DAAc,CAAC,IAAI,CAACS,IAAI,CAACwB,cAAc,EAAE,CAAC,EAAElC,mDAAG,CAAC,CAAC,CAACmC,CAAC,EAAEC,UAAU,CAAC,KAAK,IAAI,CAACC,SAAS,CAACD,UAAU,CAAC,CAAC,CAAC,CACtGE,SAAS,EAAE;EACpB;EACAD,SAAS,CAACD,UAAU,EAAE;IAClB,IAAIA,UAAU,EAAE;MACZ;MACA;MACA,IAAI,CAACzB,aAAa,CAAC4B,MAAM,CAACxD,6EAAgC,CAAC;MAC3D,IAAI,CAACqC,IAAI,CAACqB,KAAK,EAAE;IACrB;IACA,IAAI,CAAC5B,KAAK,CAACiB,IAAI,CAAC,KAAK,CAAC;EAC1B;AACJ;AACAtB,yBAAyB,CAACkC,IAAI;EAAA,iBAAwFlC,yBAAyB,EAAnCtC,sDAAE,CAAmDY,wDAAc,GAAnEZ,sDAAE,CAA8EY,iEAAuB,GAAvGZ,sDAAE,CAAkHY,sDAAY;AAAA,CAA6C;AACzR0B,yBAAyB,CAACmC,KAAK,kBAD6EzE,gEAAE;EAAA,OACYsC,yBAAyB;EAAA,SAAzBA,yBAAyB;AAAA,EAAG;AACtJ;EAAA,mDAF4GtC,+DAAE,CAEnBsC,yBAAyB,EAAc,CAAC;IACvHoC,IAAI,EAAEzE,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyE,IAAI,EAAE9D,wDAAcM;IAAC,CAAC,EAAE;MAAEwD,IAAI,EAAE9D,iEAAuBO;IAAC,CAAC,EAAE;MAAEuD,IAAI,EAAE9D,sDAAYQ;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEzI;AACA;AACA;AACA;AACA;AACA,MAAMuD,kBAAkB,CAAC;EACrBpC,WAAW,CAACqC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC1B,IAAI,GAAG,IAAI,CAAC0B,OAAO,CAAC1B,IAAI;IAC7B,IAAI,CAACN,WAAW,GAAG,IAAI,CAACgC,OAAO,CAAChC,WAAW;IAC3C,IAAI,CAACiC,KAAK,GAAG,IAAI;EACrB;EACAC,QAAQ,GAAG;IACP,IAAI,CAACF,OAAO,CAACnB,KAAK,EAAE;EACxB;AACJ;AACAkB,kBAAkB,CAACH,IAAI;EAAA,iBAAwFG,kBAAkB,EAtBrB3E,+DAAE,CAsBqCsC,yBAAyB;AAAA,CAA4C;AACxNqC,kBAAkB,CAACI,IAAI,kBAvBqF/E,+DAAE;EAAA,MAuBX2E,kBAAkB;EAAA;EAAA;EAAA;IAAA;MAvBT3E,yDAAE;IAAA;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAAFA,wDAAE,oEAuBiM;MAvBnMA,oDAAE;MAAFA,4DAAE,cAuB0P;MAvB5PA,wDAAE;QAAA,OAuBwN,cAAU;MAAA,EAAE;MAvBtOA,4DAAE,YAuBqQ;MAvBvQA,oDAAE,GAuBuW;MAvBzWA,oDAAE;MAAFA,0DAAE,EAuB8W;MAvBhXA,uDAAE,eAuBikB;MAvBnkBA,oDAAE;MAAFA,uDAAE,wBAuByoB;MAvB3oBA,0DAAE,EAuBqpB;MAvBvpBA,4DAAE,aAuBkqB;MAvBpqBA,oDAAE,IAuBgwB;MAvBlwBA,oDAAE;MAAFA,0DAAE,EAuBuwB;MAvBzwBA,uDAAE,gBAuBykC;MAvB3kCA,oDAAE;MAAFA,oDAAE;MAAFA,uDAAE,yBAuBmpC;MAvBrpCA,0DAAE,EAuB+pC;MAvBjqCA,4DAAE,YAuBkvC;MAvBpvCA,oDAAE;MAAFA,oDAAE,IAuB0yC;MAvB5yCA,oDAAE;MAAFA,0DAAE,EAuB8yC;MAvBhzCA,4DAAE,iBAuBg6C;MAvBl6CA,oDAAE,IAuBg9C;MAvBl9CA,oDAAE;MAAFA,0DAAE,EAuBy9C;IAAA;IAAA;MAvB39CA,wDAAE,SAAFA,yDAAE,yBAuBiL;MAvBnLA,uDAAE,GAuByP;MAvB3PA,wDAAE,uBAuByP;MAvB3PA,uDAAE,GAuBuW;MAvBzWA,+DAAE,CAAFA,yDAAE,wCAuBuW;MAvBzWA,uDAAE,GAuByjB;MAvB3jBA,mEAAE,gBAAFA,yDAAE,8CAuByjB;MAvB3jBA,uDAAE,GAuBunB;MAvBznBA,wDAAE,mCAuBunB;MAvBznBA,uDAAE,GAuBgwB;MAvBlwBA,+DAAE,CAAFA,yDAAE,qCAuBgwB;MAvBlwBA,uDAAE,GAuB+6B;MAvBj7BA,mEAAE,gBAAFA,yDAAE,2CAuB+6B;MAvBj7BA,yDAAE,eAAFA,yDAAE,2CAuB+hC;MAvBjiCA,uDAAE,GAuBioC;MAvBnoCA,wDAAE,qCAuBioC;MAvBnoCA,uDAAE,GAuB8tC;MAvBhuCA,wDAAE,eAAFA,yDAAE,SAAFA,6DAAE,WAuB8tC;MAvBhuCA,uDAAE,GAuB0yC;MAvB5yCA,gEAAE,MAAFA,yDAAE,0CAuB0yC;MAvB5yCA,uDAAE,GAuB25C;MAvB75CA,wDAAE,+BAuB25C;MAvB75CA,uDAAE,GAuBg9C;MAvBl9CA,gEAAE,MAAFA,yDAAE,kCAuBg9C;IAAA;EAAA;EAAA,eAAiEiC,iDAAO,EAA6F3B,4DAAgB,EAAyFA,gEAAuB,EAAyPA,2DAAkB,EAAsFA,gEAAuB,EAAqIA,6DAAoB,EAAyMA,8DAAqB,EAA4HA,2DAAkB,EAA8I6B,uDAAe,EAA4Nd,sEAAsB,EAA+GA,mEAAmB,EAAuDA,oFAAoC,EAAuFY,sDAAY,EAAyCrB,oDAAU,EAAyCA,0DAAgB;EAAA;EAAA;AAAA,EAA+E;AAC1mH;EAAA,mDAxB4GZ,+DAAE,CAwBnB2E,kBAAkB,EAAc,CAAC;IAChHD,IAAI,EAAExE,oDAAS;IACf6F,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,eAAe;MAAEC,eAAe,EAAE9F,yEAA8B;MAAEgG,QAAQ,EAAE;IAA+2C,CAAC;EACn9C,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEzB,IAAI,EAAEpC;IAA0B,CAAC,CAAC;EAAE,CAAC,EAAkB;IAAEuC,KAAK,EAAE,CAAC;MACrGH,IAAI,EAAEtE,sDAAW;MACjB2F,IAAI,EAAE,CAAC,iBAAiB;IAC5B,CAAC;EAAE,CAAC;AAAA;;AAEhB;AACA;AACA;AACA;AACA;AACA,MAAMK,eAAe,CAAC;AAEtBA,eAAe,CAAC5B,IAAI;EAAA,iBAAwF4B,eAAe;AAAA,CAAkD;AAC7KA,eAAe,CAACC,IAAI,kBAxCwFrG,8DAAE;EAAA,MAwCDoG;AAAe,EAQlF;AAC1CA,eAAe,CAACE,IAAI,kBAjDwFtG,8DAAE;EAAA,WAiD2B,CACjIgB,qEAAoB,CAAC;IACjBuF,aAAa,EAAE;MACXC,+BAA+B,EAAE;QAC7BC,SAAS,EAAE9B,kBAAkB;QAC7B+B,MAAM,EAAE,CAACzF,yDAAY,CAAC;QACtB0F,SAAS,EAAE,CACP;UACIC,OAAO,EAAEtE,yBAAyB;UAClCuE,QAAQ,EAAEvE,yBAAyB;UACnCwE,IAAI,EAAE,CAAC5F,wDAAW,EAAEC,iEAAoB,EAAEC,sDAAS;QACvD,CAAC;MAET;IACJ;EACJ,CAAC,CAAC,CACL;EAAA,UAAYc,yDAAY,EACrBxB,uDAAW,EACXC,+DAAmB,EACnByB,yDAAY,EACZtB,sDAAS,EACTC,uDAAU,EACVQ,mEAAgB,EAChBC,gEAAa,EACbC,iFAA8B;AAAA,EAAI;AAC1C;EAAA,mDA1E4GzB,+DAAE,CA0EnBoG,eAAe,EAAc,CAAC;IAC7G1B,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CACL7E,yDAAY,EACZxB,uDAAW,EACXC,+DAAmB,EACnByB,yDAAY,EACZtB,sDAAS,EACTC,uDAAU,EACVQ,mEAAgB,EAChBC,gEAAa,EACbC,iFAA8B,CACjC;MACDkF,SAAS,EAAE,CACP3F,qEAAoB,CAAC;QACjBuF,aAAa,EAAE;UACXC,+BAA+B,EAAE;YAC7BC,SAAS,EAAE9B,kBAAkB;YAC7B+B,MAAM,EAAE,CAACzF,yDAAY,CAAC;YACtB0F,SAAS,EAAE,CACP;cACIC,OAAO,EAAEtE,yBAAyB;cAClCuE,QAAQ,EAAEvE,yBAAyB;cACnCwE,IAAI,EAAE,CAAC5F,wDAAW,EAAEC,iEAAoB,EAAEC,sDAAS;YACvD,CAAC;UAET;QACJ;MACJ,CAAC,CAAC,CACL;MACD4F,YAAY,EAAE,CAACrC,kBAAkB;IACrC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMsC,sBAAsB,CAAC;EACzB1E,WAAW,CAAC2E,cAAc,EAAE;IACxB,IAAI,CAACA,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,YAAY,GAAG,KAAK;EAC7B;EACAC,QAAQ,GAAG;IACP,IAAI,CAACD,YAAY,GAAG,IAAI,CAACD,cAAc,CAACG,QAAQ,CAACC,WAAW,CAAC,QAAQ,CAAC;EAC1E;AACJ;AACAL,sBAAsB,CAACzC,IAAI;EAAA,iBAAwFyC,sBAAsB,EAjI7BjH,+DAAE,CAiI6CmC,2DAAmB;AAAA,CAA4C;AAC1N8E,sBAAsB,CAAClC,IAAI,kBAlIiF/E,+DAAE;EAAA,MAkIPiH,sBAAsB;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAlIjBjH,4DAAE,aAkIiG;MAlInGA,oDAAE,GAkI4L;MAlI9LA,oDAAE;MAAFA,0DAAE,EAkIgM;MAlIlMA,wDAAE,4EAkIob;MAlItbA,wDAAE,4EAkI8qB;MAlIhrBA,0DAAE,EAkIsrB;IAAA;IAAA;MAlIxrBA,uDAAE,GAkI4L;MAlI9LA,gEAAE,MAAFA,yDAAE,yCAkI4L;MAlI9LA,uDAAE,GAkIyO;MAlI3OA,wDAAE,2BAkIyO;MAlI3OA,uDAAE,GAkI4d;MAlI9dA,wDAAE,0BAkI4d;IAAA;EAAA;EAAA,eAAyQiC,iDAAO,EAA6FE,uDAAe,EAAuNvB,oDAAU,EAAyCA,0DAAgB;EAAA;AAAA,EAA2B;AAC3vC;EAAA,mDAnI4GZ,+DAAE,CAmInBiH,sBAAsB,EAAc,CAAC;IACpHvC,IAAI,EAAExE,oDAAS;IACf6F,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,mBAAmB;MAAEG,QAAQ,EAAE;IAAknB,CAAC;EACzqB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEzB,IAAI,EAAEvC,2DAAmBoF;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEnF;AACA;AACA;AACA;AACA;AACA,MAAMC,mBAAmB,CAAC;AAE1BA,mBAAmB,CAAChD,IAAI;EAAA,iBAAwFgD,mBAAmB;AAAA,CAAkD;AACrLA,mBAAmB,CAACnB,IAAI,kBAhJoFrG,8DAAE;EAAA,MAgJGwH;AAAmB,EAAyH;AAC7PA,mBAAmB,CAAClB,IAAI,kBAjJoFtG,8DAAE;EAAA,WAiJmC,CACzIgB,qEAAoB,CAAC;IACjBuF,aAAa,EAAE;MACXkB,kCAAkC,EAAE;QAChChB,SAAS,EAAEQ,sBAAsB;QACjCP,MAAM,EAAE,CAACzF,yDAAY;MACzB;IACJ;EACJ,CAAC,CAAC,CACL;EAAA,UAAYiB,yDAAY,EAAEE,yDAAY,EAAEtB,sDAAS,EAAEY,iEAAc,EAAEX,uDAAU;AAAA,EAAI;AACtF;EAAA,mDA3J4Gf,+DAAE,CA2JnBwH,mBAAmB,EAAc,CAAC;IACjH9C,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CAAC7E,yDAAY,EAAEE,yDAAY,EAAEtB,sDAAS,EAAEY,iEAAc,EAAEX,uDAAU,CAAC;MAC5E4F,SAAS,EAAE,CACP3F,qEAAoB,CAAC;QACjBuF,aAAa,EAAE;UACXkB,kCAAkC,EAAE;YAChChB,SAAS,EAAEQ,sBAAsB;YACjCP,MAAM,EAAE,CAACzF,yDAAY;UACzB;QACJ;MACJ,CAAC,CAAC,CACL;MACD+F,YAAY,EAAE,CAACC,sBAAsB;IACzC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMS,cAAc,CAAC;EACjBnF,WAAW,CAACC,IAAI,EAAEmF,WAAW,EAAE;IAC3B,IAAI,CAACnF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACmF,WAAW,GAAGA,WAAW;EAClC;EACAP,QAAQ,GAAG;IACP,IAAI,CAACQ,KAAK,GAAG,IAAI,CAACpF,IAAI,CAACwB,cAAc,EAAE,CAACnB,IAAI,CAACb,0DAAS,CAAEgC,cAAc,IAAK;MACvE,IAAIA,cAAc,EAAE;QAChB,OAAO,IAAI,CAAC2D,WAAW,CAACE,GAAG,EAAE;MACjC,CAAC,MACI;QACD,OAAOhG,yCAAE,CAACiG,SAAS,CAAC;MACxB;IACJ,CAAC,CAAC,CAAC;EACP;AACJ;AACAJ,cAAc,CAAClD,IAAI;EAAA,iBAAwFkD,cAAc,EAxMb1H,+DAAE,CAwM6BY,wDAAc,GAxM7CZ,+DAAE,CAwMwDqC,4EAAsB;AAAA,CAA4C;AACxOqF,cAAc,CAAC3C,IAAI,kBAzMyF/E,+DAAE;EAAA,MAyMf0H,cAAc;EAAA;EAAA;EAAA;EAAA;EAAA;IAAA;MAzMD1H,wDAAE,oEAyM2T;MAzM7TA,oDAAE;MAAFA,wDAAE,yEAAFA,oEAAE,CAyMge;IAAA;IAAA;MAAA,YAzMleA,yDAAE;MAAFA,wDAAE,SAAFA,yDAAE,kBAyMoF;IAAA;EAAA;EAAA,eAA2biC,iDAAO,EAA6FE,uDAAe,EAA4Nd,oEAAoB,EAAiIY,sDAAY,EAAyCrB,oDAAU,EAAyCA,0DAAgB;EAAA;AAAA,EAA2B;AACpvC;EAAA,mDA1M4GZ,+DAAE,CA0MnB0H,cAAc,EAAc,CAAC;IAC5GhD,IAAI,EAAExE,oDAAS;IACf6F,IAAI,EAAE,CAAC;MAAEC,QAAQ,EAAE,UAAU;MAAEG,QAAQ,EAAE;IAAqb,CAAC;EACne,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEzB,IAAI,EAAE9D,wDAAcM;IAAC,CAAC,EAAE;MAAEwD,IAAI,EAAErC,4EAAsB0F;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAEhH;AACA;AACA;AACA;AACA;AACA,MAAME,WAAW,CAAC;AAElBA,WAAW,CAACzD,IAAI;EAAA,iBAAwFyD,WAAW;AAAA,CAAkD;AACrKA,WAAW,CAAC5B,IAAI,kBAvN4FrG,8DAAE;EAAA,MAuNLiI;AAAW,EAAiH;AACrOA,WAAW,CAAC3B,IAAI,kBAxN4FtG,8DAAE;EAAA,WAwNmB,CACzHgB,qEAAoB,CAAC;IACjBuF,aAAa,EAAE;MACXmB,cAAc,EAAE;QACZjB,SAAS,EAAEiB;MACf;IACJ;EACJ,CAAC,CAAC,CACL;EAAA,UAAYxF,yDAAY,EAAEE,yDAAY,EAAEtB,sDAAS,EAAEY,iEAAc,EAAEX,uDAAU;AAAA,EAAI;AACtF;EAAA,mDAjO4Gf,+DAAE,CAiOnBiI,WAAW,EAAc,CAAC;IACzGvD,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CAAC7E,yDAAY,EAAEE,yDAAY,EAAEtB,sDAAS,EAAEY,iEAAc,EAAEX,uDAAU,CAAC;MAC5E4F,SAAS,EAAE,CACP3F,qEAAoB,CAAC;QACjBuF,aAAa,EAAE;UACXmB,cAAc,EAAE;YACZjB,SAAS,EAAEiB;UACf;QACJ;MACJ,CAAC,CAAC,CACL;MACDV,YAAY,EAAE,CAACU,cAAc;IACjC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMQ,2BAA2B,CAAC;AAElCA,2BAA2B,CAAC1D,IAAI;EAAA,iBAAwF0D,2BAA2B;AAAA,CAAkD;AACrMA,2BAA2B,CAAC7B,IAAI,kBAhQ4ErG,8DAAE;EAAA,MAgQWkI;AAA2B,EAAiE;AACrNA,2BAA2B,CAAC5B,IAAI,kBAjQ4EtG,8DAAE;EAAA,UAiQkDiI,WAAW,EAAE7B,eAAe,EAAEoB,mBAAmB;AAAA,EAAI;AACrN;EAAA,mDAlQ4GxH,+DAAE,CAkQnBkI,2BAA2B,EAAc,CAAC;IACzHxD,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CAACkB,WAAW,EAAE7B,eAAe,EAAEoB,mBAAmB;IAC/D,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AClVoC;AACiC;AAC/B;AACoB;AACgC;AAC/C;;AAE3C;AACA;AACA;AACA;AACA;AACA,MAAMe,uBAAuB,GAAG,IAAIJ,yDAAc,CAAC,uBAAuB,CAAC;AAC3E,MAAMK,uBAAuB,GAAG,IAAIL,yDAAc,CAAC,uBAAuB,CAAC;;AAE3E;AACA;AACA;AACA;AACA;AACA,MAAMM,kBAAkB,CAAC;;AAGzB;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,CAAC;EACvBnG,WAAW,CAACoG,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;EAC1B;EACAd,GAAG,CAAC9E,MAAM,EAAE;IACR,OAAO,IAAI,CAAC4F,OAAO,CAACC,IAAI,CAAC7F,MAAM,CAAC;EACpC;AACJ;AACA2F,oBAAoB,CAAClE,IAAI;EAAA,iBAAwFkE,oBAAoB,EAA9B1I,sDAAE,CAA8CyI,kBAAkB;AAAA,CAA6C;AACtNC,oBAAoB,CAACjE,KAAK,kBAD6EzE,gEAAE;EAAA,OACY0I,oBAAoB;EAAA,SAApBA,oBAAoB;AAAA,EAAG;AAC5I;EAAA,mDAFuG1I,+DAAE,CAEd0I,oBAAoB,EAAc,CAAC;IAClHhE,IAAI,EAAEzE,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyE,IAAI,EAAE+D;IAAmB,CAAC,CAAC;EAAE,CAAC;AAAA;;AAElF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMI,kBAAkB,CAAC;EACrBtG,WAAW,CAACuG,oBAAoB,EAAEC,aAAa,EAAEC,KAAK,EAAE;IACpD,IAAI,CAACF,oBAAoB,GAAGA,oBAAoB;IAChD,IAAI,CAACC,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,KAAK,CAACE,MAAM,CAAC,MAAM,IAAI,CAACH,aAAa,CACtDI,UAAU,CAAC,IAAI,CAAC,CAChBtG,IAAI,CAACb,yDAAS,CAAEe,MAAM,IAAK,IAAI,CAAC+F,oBAAoB,CAACjB,GAAG,CAAC9E,MAAM,CAAC,CAAC,CAAC,EAAE;MACrEqG,QAAQ,EAAE,CAACd,iFAAuB,CAAC;MACnCe,OAAO,EAAE,CAACjB,uDAAU,EAAEC,wDAAW;IACrC,CAAC,CAAC;EACN;EACA;AACJ;AACA;AACA;EACIiB,OAAO,CAACvG,MAAM,EAAE;IACZ,OAAO,IAAI,CAAC+F,oBAAoB,CAACjB,GAAG,CAAC9E,MAAM,CAAC;EAChD;EACA;AACJ;AACA;EACI8E,GAAG,GAAG;IACF,OAAO,IAAI,CAACoB,SAAS,CAACpB,GAAG,EAAE;EAC/B;AACJ;AACAgB,kBAAkB,CAACrE,IAAI;EAAA,iBAAwFqE,kBAAkB,EA3C1B7I,sDAAE,CA2C0C0I,oBAAoB,GA3ChE1I,sDAAE,CA2C2EiC,0DAAgB,GA3C7FjC,sDAAE,CA2CwGiC,yDAAe;AAAA,CAA6C;AAC7Q4G,kBAAkB,CAACpE,KAAK,kBA5C+EzE,gEAAE;EAAA,OA4CU6I,kBAAkB;EAAA,SAAlBA,kBAAkB;AAAA,EAAG;AACxI;EAAA,mDA7CuG7I,+DAAE,CA6Cd6I,kBAAkB,EAAc,CAAC;IAChHnE,IAAI,EAAEzE,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyE,IAAI,EAAEgE;IAAqB,CAAC,EAAE;MAAEhE,IAAI,EAAEzC,0DAAgBsH;IAAC,CAAC,EAAE;MAAE7E,IAAI,EAAEzC,yDAAeuH;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAE3I;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,eAAe,GAAG,CACpBZ,kBAAkB,EAClB;EACIjC,OAAO,EAAEmB,2EAAiB;EAC1B2B,WAAW,EAAEb;AACjB,CAAC,CACJ;;AAED;AACA;AACA;AACA;AACA;AACA,MAAMc,qBAAqB,CAAC;AAE5BA,qBAAqB,CAACnF,IAAI;EAAA,iBAAwFmF,qBAAqB;AAAA,CAAkD;AACzLA,qBAAqB,CAACtD,IAAI,kBA5E6ErG,8DAAE;EAAA,MA4EU2J;AAAqB,EAAG;AAC3IA,qBAAqB,CAACrD,IAAI,kBA7E6EtG,8DAAE;EAAA,WA6E4C,CAAC0I,oBAAoB,EAAE,GAAGe,eAAe;AAAC,EAAG;AAClM;EAAA,mDA9EuGzJ,+DAAE,CA8Ed2J,qBAAqB,EAAc,CAAC;IACnHjF,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCY,SAAS,EAAE,CAAC+B,oBAAoB,EAAE,GAAGe,eAAe;IACxD,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACjIoC;AACyB;AACvB;AACoD;AACC;AACzD;AACU;AACD;;AAE3C;AACA;AACA;AACA;AACA;AACA,MAAMQ,2BAA2B,GAAG;EAChCC,OAAO,EAAE;IACLC,GAAG,EAAE;MAAEC,SAAS,EAAE;QAAEC,IAAI,EAAE;MAAkB;IAAE;EAClD;AACJ,CAAC;;AAED;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,qBAAqB,CAAC;EACxB/H,WAAW,CAACgI,IAAI,EAAEC,YAAY,EAAEC,SAAS,EAAE;IACvC,IAAI,CAACF,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGd,qDAAM,CAACC,0DAAa,CAAC;EACvC;EACAjB,IAAI,CAAC7F,MAAM,EAAE;IACT,MAAM4H,GAAG,GAAG,IAAI,CAACH,YAAY,CAACI,QAAQ,CAAC,MAAM,EAAE;MAAEC,SAAS,EAAE;QAAE9H;MAAO;IAAE,CAAC,CAAC;IACzE,OAAO,IAAI,CAACwH,IAAI,CAAC1C,GAAG,CAAC8C,GAAG,CAAC,CAAC9H,IAAI,CAACmH,0DAAU,CAAEc,KAAK,IAAKf,gDAAU,CAACD,mEAAkB,CAACgB,KAAK,EAAE,IAAI,CAACJ,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAACD,SAAS,CAACM,QAAQ,CAACxC,iFAAuB,CAAC,CAAC;EAC/J;AACJ;AACA+B,qBAAqB,CAAC9F,IAAI;EAAA,iBAAwF8F,qBAAqB,EAA/BtK,sDAAE,CAA+CY,4DAAa,GAA9DZ,sDAAE,CAAyEiC,gEAAsB,GAAjGjC,sDAAE,CAA4GiC,6DAAmB;AAAA,CAA6C;AACtRqI,qBAAqB,CAAC7F,KAAK,kBAD6EzE,gEAAE;EAAA,OACYsK,qBAAqB;EAAA,SAArBA,qBAAqB;AAAA,EAAG;AAC9I;EAAA,mDAFwGtK,+DAAE,CAEfsK,qBAAqB,EAAc,CAAC;IACnH5F,IAAI,EAAEzE,qDAAUA;EACpB,CAAC,CAAC,EAAkB,YAAY;IAAE,OAAO,CAAC;MAAEyE,IAAI,EAAE9D,4DAAaoK;IAAC,CAAC,EAAE;MAAEtG,IAAI,EAAEzC,gEAAsBgJ;IAAC,CAAC,EAAE;MAAEvG,IAAI,EAAEzC,6DAAmBiJ;IAAC,CAAC,CAAC;EAAE,CAAC;AAAA;;AAE9I;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAMC,oBAAoB,CAAC;AAE3BA,oBAAoB,CAAC3G,IAAI;EAAA,iBAAwF2G,oBAAoB;AAAA,CAAkD;AACvLA,oBAAoB,CAAC9E,IAAI,kBApB+ErG,8DAAE;EAAA,MAoBQmL;AAAoB,EAAG;AACzIA,oBAAoB,CAAC7E,IAAI,kBArB+EtG,8DAAE;EAAA,WAqByC,CAC3IgB,qEAAoB,CAACiJ,2BAA2B,CAAC,EACjD;IAAErD,OAAO,EAAE6B,4EAAkB;IAAE5B,QAAQ,EAAEyD;EAAsB,CAAC;AACnE,EAAG;AACR;EAAA,mDAzBwGtK,+DAAE,CAyBfmL,oBAAoB,EAAc,CAAC;IAClHzG,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCY,SAAS,EAAE,CACP3F,qEAAoB,CAACiJ,2BAA2B,CAAC,EACjD;QAAErD,OAAO,EAAE6B,4EAAkB;QAAE5B,QAAQ,EAAEyD;MAAsB,CAAC;IAExE,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvFoC;AACK;AACwC;AACZ;AACF;;AAEnE;AACA;AACA;AACA;AACA;AACA,MAAMc,iBAAiB,CAAC;AAExBA,iBAAiB,CAAC5G,IAAI;EAAA,iBAAwF4G,iBAAiB;AAAA,CAAkD;AACjLA,iBAAiB,CAAC/E,IAAI,kBAD8ErG,8DAAE;EAAA,MACSoL;AAAiB,EAEzF;AACvCA,iBAAiB,CAAC9E,IAAI,kBAJ8EtG,8DAAE;EAAA,UAIsC2J,+EAAqB,EACzJwB,6EAAoB,EACpBjD,2FAA2B;AAAA,EAAI;AACvC;EAAA,mDAPoGlI,+DAAE,CAOXoL,iBAAiB,EAAc,CAAC;IAC/G1G,IAAI,EAAErE,mDAAQ;IACd0F,IAAI,EAAE,CAAC;MACCgB,OAAO,EAAE,CACL4C,+EAAqB,EACrBwB,6EAAoB,EACpBjD,2FAA2B;IAEnC,CAAC;EACT,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","sources":["./node_modules/@spartacus/user/fesm2020/spartacus-user-account-components.mjs","./node_modules/@spartacus/user/fesm2020/spartacus-user-account-core.mjs","./node_modules/@spartacus/user/fesm2020/spartacus-user-account-occ.mjs","./node_modules/@spartacus/user/fesm2020/spartacus-user-account.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, ChangeDetectionStrategy, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { UntypedFormGroup, UntypedFormControl, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport * as i1 from '@spartacus/core';\nimport { GlobalMessageType, UrlModule, I18nModule, provideDefaultConfig, NotAuthGuard, AuthService, GlobalMessageService, WindowRef } from '@spartacus/core';\nimport * as i5 from '@spartacus/storefront';\nimport { CustomFormValidators, FormErrorsModule, SpinnerModule, PasswordVisibilityToggleModule, PageSlotModule } from '@spartacus/storefront';\nimport { BehaviorSubject, from, of } from 'rxjs';\nimport { tap, withLatestFrom, switchMap } from 'rxjs/operators';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i2$1 from '@spartacus/user/account/root';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginFormComponentService {\n    constructor(auth, globalMessage, winRef) {\n        this.auth = auth;\n        this.globalMessage = globalMessage;\n        this.winRef = winRef;\n        this.busy$ = new BehaviorSubject(false);\n        this.isUpdating$ = this.busy$.pipe(tap((state) => {\n            const userId = this.winRef.nativeWindow?.history?.state?.['newUid'];\n            if (userId) {\n                this.form.patchValue({ userId });\n            }\n            state === true ? this.form.disable() : this.form.enable();\n        }));\n        this.form = new UntypedFormGroup({\n            userId: new UntypedFormControl('', [\n                Validators.required,\n                CustomFormValidators.emailValidator,\n            ]),\n            password: new UntypedFormControl('', Validators.required),\n        });\n    }\n    login() {\n        if (!this.form.valid) {\n            this.form.markAllAsTouched();\n            return;\n        }\n        this.busy$.next(true);\n        from(this.auth.loginWithCredentials(\n        // TODO: consider dropping toLowerCase as this should not be part of the UI,\n        // as it's too opinionated and doesn't work with other AUTH services\n        this.form.value.userId.toLowerCase(), this.form.value.password))\n            .pipe(withLatestFrom(this.auth.isUserLoggedIn()), tap(([_, isLoggedIn]) => this.onSuccess(isLoggedIn)))\n            .subscribe();\n    }\n    onSuccess(isLoggedIn) {\n        if (isLoggedIn) {\n            // We want to remove error messages on successful login (primary the bad\n            // username/password combination)\n            this.globalMessage.remove(GlobalMessageType.MSG_TYPE_ERROR);\n            this.form.reset();\n        }\n        this.busy$.next(false);\n    }\n}\nLoginFormComponentService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormComponentService, deps: [{ token: i1.AuthService }, { token: i1.GlobalMessageService }, { token: i1.WindowRef }], target: i0.ɵɵFactoryTarget.Injectable });\nLoginFormComponentService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormComponentService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormComponentService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i1.GlobalMessageService }, { type: i1.WindowRef }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginFormComponent {\n    constructor(service) {\n        this.service = service;\n        this.form = this.service.form;\n        this.isUpdating$ = this.service.isUpdating$;\n        this.style = true;\n    }\n    onSubmit() {\n        this.service.login();\n    }\n}\nLoginFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormComponent, deps: [{ token: LoginFormComponentService }], target: i0.ɵɵFactoryTarget.Component });\nLoginFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: LoginFormComponent, selector: \"cx-login-form\", host: { properties: { \"class.user-form\": \"this.style\" } }, ngImport: i0, template: \"<cx-spinner class=\\\"overlay\\\" *ngIf=\\\"isUpdating$ | async\\\"></cx-spinner>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.emailAddress.label' | cxTranslate\\n    }}</span>\\n    <input\\n      required=\\\"true\\\"\\n      type=\\\"email\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"userId\\\"\\n      placeholder=\\\"{{ 'loginForm.emailAddress.placeholder' | cxTranslate }}\\\"\\n    />\\n    <cx-form-errors [control]=\\\"form.get('userId')\\\"></cx-form-errors>\\n  </label>\\n\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.password.label' | cxTranslate\\n    }}</span>\\n    <input\\n      required=\\\"true\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'loginForm.password.placeholder' | cxTranslate }}\\\"\\n      formControlName=\\\"password\\\"\\n      [attr.aria-label]=\\\"'loginForm.password.placeholder' | cxTranslate\\\"\\n      cxPasswordVisibilitySwitch\\n    />\\n    <cx-form-errors [control]=\\\"form.get('password')\\\"></cx-form-errors>\\n  </label>\\n\\n  <a [routerLink]=\\\"{ cxRoute: 'forgotPassword' } | cxUrl\\\" class=\\\"btn-link\\\">\\n    {{ 'loginForm.forgotPassword' | cxTranslate }}\\n  </a>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-block btn-primary\\\"\\n    [disabled]=\\\"form.disabled\\\"\\n  >\\n    {{ 'loginForm.signIn' | cxTranslate }}\\n  </button>\\n</form>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i3.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i3.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i3.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i5.FormErrorsComponent, selector: \"cx-form-errors\", inputs: [\"prefix\", \"translationParams\", \"control\"] }, { kind: \"component\", type: i5.SpinnerComponent, selector: \"cx-spinner\" }, { kind: \"directive\", type: i5.PasswordVisibilityToggleDirective, selector: \"[cxPasswordVisibilitySwitch][type=\\\"password\\\"]\" }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.UrlPipe, name: \"cxUrl\" }, { kind: \"pipe\", type: i1.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-login-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<cx-spinner class=\\\"overlay\\\" *ngIf=\\\"isUpdating$ | async\\\"></cx-spinner>\\n\\n<form (ngSubmit)=\\\"onSubmit()\\\" [formGroup]=\\\"form\\\">\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.emailAddress.label' | cxTranslate\\n    }}</span>\\n    <input\\n      required=\\\"true\\\"\\n      type=\\\"email\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"userId\\\"\\n      placeholder=\\\"{{ 'loginForm.emailAddress.placeholder' | cxTranslate }}\\\"\\n    />\\n    <cx-form-errors [control]=\\\"form.get('userId')\\\"></cx-form-errors>\\n  </label>\\n\\n  <label>\\n    <span class=\\\"label-content\\\">{{\\n      'loginForm.password.label' | cxTranslate\\n    }}</span>\\n    <input\\n      required=\\\"true\\\"\\n      type=\\\"password\\\"\\n      class=\\\"form-control\\\"\\n      placeholder=\\\"{{ 'loginForm.password.placeholder' | cxTranslate }}\\\"\\n      formControlName=\\\"password\\\"\\n      [attr.aria-label]=\\\"'loginForm.password.placeholder' | cxTranslate\\\"\\n      cxPasswordVisibilitySwitch\\n    />\\n    <cx-form-errors [control]=\\\"form.get('password')\\\"></cx-form-errors>\\n  </label>\\n\\n  <a [routerLink]=\\\"{ cxRoute: 'forgotPassword' } | cxUrl\\\" class=\\\"btn-link\\\">\\n    {{ 'loginForm.forgotPassword' | cxTranslate }}\\n  </a>\\n\\n  <button\\n    type=\\\"submit\\\"\\n    class=\\\"btn btn-block btn-primary\\\"\\n    [disabled]=\\\"form.disabled\\\"\\n  >\\n    {{ 'loginForm.signIn' | cxTranslate }}\\n  </button>\\n</form>\\n\" }]\n        }], ctorParameters: function () { return [{ type: LoginFormComponentService }]; }, propDecorators: { style: [{\n                type: HostBinding,\n                args: ['class.user-form']\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginFormModule {\n}\nLoginFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormModule, declarations: [LoginFormComponent], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule,\n        I18nModule,\n        FormErrorsModule,\n        SpinnerModule,\n        PasswordVisibilityToggleModule] });\nLoginFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerLoginComponent: {\n                    component: LoginFormComponent,\n                    guards: [NotAuthGuard],\n                    providers: [\n                        {\n                            provide: LoginFormComponentService,\n                            useClass: LoginFormComponentService,\n                            deps: [AuthService, GlobalMessageService, WindowRef],\n                        },\n                    ],\n                },\n            },\n        }),\n    ], imports: [CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule,\n        I18nModule,\n        FormErrorsModule,\n        SpinnerModule,\n        PasswordVisibilityToggleModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginFormModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        FormsModule,\n                        ReactiveFormsModule,\n                        RouterModule,\n                        UrlModule,\n                        I18nModule,\n                        FormErrorsModule,\n                        SpinnerModule,\n                        PasswordVisibilityToggleModule,\n                    ],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerLoginComponent: {\n                                    component: LoginFormComponent,\n                                    guards: [NotAuthGuard],\n                                    providers: [\n                                        {\n                                            provide: LoginFormComponentService,\n                                            useClass: LoginFormComponentService,\n                                            deps: [AuthService, GlobalMessageService, WindowRef],\n                                        },\n                                    ],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginFormComponent],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginRegisterComponent {\n    constructor(activatedRoute) {\n        this.activatedRoute = activatedRoute;\n        this.loginAsGuest = false;\n    }\n    ngOnInit() {\n        this.loginAsGuest = this.activatedRoute.snapshot.queryParams['forced'];\n    }\n}\nLoginRegisterComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterComponent, deps: [{ token: i1$1.ActivatedRoute }], target: i0.ɵɵFactoryTarget.Component });\nLoginRegisterComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: LoginRegisterComponent, selector: \"cx-login-register\", ngImport: i0, template: \"<div class=\\\"register\\\">\\n  <p class=\\\"cx-section-title\\\">\\n    {{ 'loginForm.dontHaveAccount' | cxTranslate }}\\n  </p>\\n\\n  <ng-container *ngIf=\\\"!loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'register' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-register\\\"\\n      >{{ 'loginForm.register' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'checkoutLogin' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-guest\\\"\\n      >{{ 'loginForm.guestCheckout' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n</div>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"pipe\", type: i1.UrlPipe, name: \"cxUrl\" }, { kind: \"pipe\", type: i1.TranslatePipe, name: \"cxTranslate\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-login-register', template: \"<div class=\\\"register\\\">\\n  <p class=\\\"cx-section-title\\\">\\n    {{ 'loginForm.dontHaveAccount' | cxTranslate }}\\n  </p>\\n\\n  <ng-container *ngIf=\\\"!loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'register' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-register\\\"\\n      >{{ 'loginForm.register' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"loginAsGuest\\\">\\n    <a\\n      [routerLink]=\\\"{ cxRoute: 'checkoutLogin' } | cxUrl\\\"\\n      class=\\\"btn btn-block btn-secondary btn-guest\\\"\\n      >{{ 'loginForm.guestCheckout' | cxTranslate }}</a\\n    >\\n  </ng-container>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1$1.ActivatedRoute }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginRegisterModule {\n}\nLoginRegisterModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginRegisterModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterModule, declarations: [LoginRegisterComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginRegisterModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                ReturningCustomerRegisterComponent: {\n                    component: LoginRegisterComponent,\n                    guards: [NotAuthGuard],\n                },\n            },\n        }),\n    ], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginRegisterModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                ReturningCustomerRegisterComponent: {\n                                    component: LoginRegisterComponent,\n                                    guards: [NotAuthGuard],\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginRegisterComponent],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginComponent {\n    constructor(auth, userAccount) {\n        this.auth = auth;\n        this.userAccount = userAccount;\n    }\n    ngOnInit() {\n        this.user$ = this.auth.isUserLoggedIn().pipe(switchMap((isUserLoggedIn) => {\n            if (isUserLoggedIn) {\n                return this.userAccount.get();\n            }\n            else {\n                return of(undefined);\n            }\n        }));\n    }\n}\nLoginComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginComponent, deps: [{ token: i1.AuthService }, { token: i2$1.UserAccountFacade }], target: i0.ɵɵFactoryTarget.Component });\nLoginComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: LoginComponent, selector: \"cx-login\", ngImport: i0, template: \"<ng-container *ngIf=\\\"user$ | async as user; else login\\\">\\n  <div class=\\\"cx-login-greet\\\">\\n    {{ 'miniLogin.userGreeting' | cxTranslate: { name: user.name } }}\\n  </div>\\n  <cx-page-slot id=\\\"account-nav\\\" position=\\\"HeaderLinks\\\"></cx-page-slot>\\n</ng-container>\\n\\n<ng-template #login>\\n  <a role=\\\"link\\\" [routerLink]=\\\"{ cxRoute: 'login' } | cxUrl\\\">{{\\n    'miniLogin.signInRegister' | cxTranslate\\n  }}</a>\\n</ng-template>\\n\", dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1$1.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"component\", type: i5.PageSlotComponent, selector: \"cx-page-slot,[cx-page-slot]\", inputs: [\"position\", \"class\", \"isPageFold\", \"hasComponents\"] }, { kind: \"pipe\", type: i2.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i1.UrlPipe, name: \"cxUrl\" }, { kind: \"pipe\", type: i1.TranslatePipe, name: \"cxTranslate\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-login', template: \"<ng-container *ngIf=\\\"user$ | async as user; else login\\\">\\n  <div class=\\\"cx-login-greet\\\">\\n    {{ 'miniLogin.userGreeting' | cxTranslate: { name: user.name } }}\\n  </div>\\n  <cx-page-slot id=\\\"account-nav\\\" position=\\\"HeaderLinks\\\"></cx-page-slot>\\n</ng-container>\\n\\n<ng-template #login>\\n  <a role=\\\"link\\\" [routerLink]=\\\"{ cxRoute: 'login' } | cxUrl\\\">{{\\n    'miniLogin.signInRegister' | cxTranslate\\n  }}</a>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1.AuthService }, { type: i2$1.UserAccountFacade }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass LoginModule {\n}\nLoginModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLoginModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginModule, declarations: [LoginComponent], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\nLoginModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                LoginComponent: {\n                    component: LoginComponent,\n                },\n            },\n        }),\n    ], imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: LoginModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, RouterModule, UrlModule, PageSlotModule, I18nModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                LoginComponent: {\n                                    component: LoginComponent,\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [LoginComponent],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountComponentsModule {\n}\nUserAccountComponentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountComponentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountComponentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountComponentsModule, imports: [LoginModule, LoginFormModule, LoginRegisterModule] });\nUserAccountComponentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountComponentsModule, imports: [LoginModule, LoginFormModule, LoginRegisterModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountComponentsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [LoginModule, LoginFormModule, LoginRegisterModule],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { LoginComponent, LoginFormComponent, LoginFormComponentService, LoginFormModule, LoginModule, LoginRegisterComponent, LoginRegisterModule, UserAccountComponentsModule };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { LoginEvent, LogoutEvent } from '@spartacus/core';\nimport { UserAccountChangedEvent, UserAccountFacade } from '@spartacus/user/account/root';\nimport { switchMap } from 'rxjs/operators';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst USER_ACCOUNT_NORMALIZER = new InjectionToken('UserAccountNormalizer');\nconst USER_ACCOUNT_SERIALIZER = new InjectionToken('UserAccountSerializer');\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountAdapter {\n}\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    get(userId) {\n        return this.adapter.load(userId);\n    }\n}\nUserAccountConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountConnector, deps: [{ token: UserAccountAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nUserAccountConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountConnector });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountConnector, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: UserAccountAdapter }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountService {\n    constructor(userAccountConnector, userIdService, query) {\n        this.userAccountConnector = userAccountConnector;\n        this.userIdService = userIdService;\n        this.query = query;\n        this.userQuery = this.query.create(() => this.userIdService\n            .takeUserId(true)\n            .pipe(switchMap((userId) => this.userAccountConnector.get(userId))), {\n            reloadOn: [UserAccountChangedEvent],\n            resetOn: [LoginEvent, LogoutEvent],\n        });\n    }\n    /**\n     * Returns the user according the userId\n     * no use query for userId can change every time\n     */\n    getById(userId) {\n        return this.userAccountConnector.get(userId);\n    }\n    /**\n     * Returns the current user.\n     */\n    get() {\n        return this.userQuery.get();\n    }\n}\nUserAccountService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountService, deps: [{ token: UserAccountConnector }, { token: i2.UserIdService }, { token: i2.QueryService }], target: i0.ɵɵFactoryTarget.Injectable });\nUserAccountService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: UserAccountConnector }, { type: i2.UserIdService }, { type: i2.QueryService }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst facadeProviders = [\n    UserAccountService,\n    {\n        provide: UserAccountFacade,\n        useExisting: UserAccountService,\n    },\n];\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountCoreModule {\n}\nUserAccountCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountCoreModule });\nUserAccountCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountCoreModule, providers: [UserAccountConnector, ...facadeProviders] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [UserAccountConnector, ...facadeProviders],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { USER_ACCOUNT_NORMALIZER, USER_ACCOUNT_SERIALIZER, UserAccountAdapter, UserAccountConnector, UserAccountCoreModule, UserAccountService };\n","import * as i0 from '@angular/core';\nimport { inject, Injectable, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { LoggerService, normalizeHttpError, provideDefaultConfig } from '@spartacus/core';\nimport { USER_ACCOUNT_NORMALIZER, UserAccountAdapter } from '@spartacus/user/account/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i1 from '@angular/common/http';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst defaultOccUserAccountConfig = {\n    backend: {\n        occ: { endpoints: { user: 'users/${userId}' } },\n    },\n};\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nclass OccUserAccountAdapter {\n    constructor(http, occEndpoints, converter) {\n        this.http = http;\n        this.occEndpoints = occEndpoints;\n        this.converter = converter;\n        this.logger = inject(LoggerService);\n    }\n    load(userId) {\n        const url = this.occEndpoints.buildUrl('user', { urlParams: { userId } });\n        return this.http.get(url).pipe(catchError((error) => throwError(normalizeHttpError(error, this.logger))), this.converter.pipeable(USER_ACCOUNT_NORMALIZER));\n    }\n}\nOccUserAccountAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: OccUserAccountAdapter, deps: [{ token: i1.HttpClient }, { token: i2.OccEndpointsService }, { token: i2.ConverterService }], target: i0.ɵɵFactoryTarget.Injectable });\nOccUserAccountAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: OccUserAccountAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: OccUserAccountAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.OccEndpointsService }, { type: i2.ConverterService }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountOccModule {\n}\nUserAccountOccModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountOccModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountOccModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountOccModule });\nUserAccountOccModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountOccModule, providers: [\n        provideDefaultConfig(defaultOccUserAccountConfig),\n        { provide: UserAccountAdapter, useClass: OccUserAccountAdapter },\n    ] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountOccModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [\n                        provideDefaultConfig(defaultOccUserAccountConfig),\n                        { provide: UserAccountAdapter, useClass: OccUserAccountAdapter },\n                    ],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OccUserAccountAdapter, UserAccountOccModule, defaultOccUserAccountConfig };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { UserAccountComponentsModule } from '@spartacus/user/account/components';\nimport { UserAccountCoreModule } from '@spartacus/user/account/core';\nimport { UserAccountOccModule } from '@spartacus/user/account/occ';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass UserAccountModule {\n}\nUserAccountModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nUserAccountModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountModule, imports: [UserAccountCoreModule,\n        UserAccountOccModule,\n        UserAccountComponentsModule] });\nUserAccountModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountModule, imports: [UserAccountCoreModule,\n        UserAccountOccModule,\n        UserAccountComponentsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: UserAccountModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        UserAccountCoreModule,\n                        UserAccountOccModule,\n                        UserAccountComponentsModule,\n                    ],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { UserAccountModule };\n"],"names":["i0","Injectable","Component","ChangeDetectionStrategy","HostBinding","NgModule","i3","UntypedFormGroup","UntypedFormControl","Validators","FormsModule","ReactiveFormsModule","i1","GlobalMessageType","UrlModule","I18nModule","provideDefaultConfig","NotAuthGuard","AuthService","GlobalMessageService","WindowRef","i5","CustomFormValidators","FormErrorsModule","SpinnerModule","PasswordVisibilityToggleModule","PageSlotModule","BehaviorSubject","from","of","tap","withLatestFrom","switchMap","i2","CommonModule","i1$1","RouterModule","i2$1","LoginFormComponentService","constructor","auth","globalMessage","winRef","busy$","isUpdating$","pipe","state","userId","nativeWindow","history","form","patchValue","disable","enable","required","emailValidator","password","login","valid","markAllAsTouched","next","loginWithCredentials","value","toLowerCase","isUserLoggedIn","_","isLoggedIn","onSuccess","subscribe","remove","MSG_TYPE_ERROR","reset","ɵfac","ɵprov","type","LoginFormComponent","service","style","onSubmit","ɵcmp","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","RouterLink","FormErrorsComponent","SpinnerComponent","PasswordVisibilityToggleDirective","AsyncPipe","UrlPipe","TranslatePipe","args","selector","changeDetection","OnPush","template","LoginFormModule","ɵmod","ɵinj","cmsComponents","ReturningCustomerLoginComponent","component","guards","providers","provide","useClass","deps","imports","declarations","LoginRegisterComponent","activatedRoute","loginAsGuest","ngOnInit","snapshot","queryParams","ActivatedRoute","LoginRegisterModule","ReturningCustomerRegisterComponent","LoginComponent","userAccount","user$","get","undefined","UserAccountFacade","PageSlotComponent","LoginModule","UserAccountComponentsModule","InjectionToken","LoginEvent","LogoutEvent","UserAccountChangedEvent","USER_ACCOUNT_NORMALIZER","USER_ACCOUNT_SERIALIZER","UserAccountAdapter","UserAccountConnector","adapter","load","UserAccountService","userAccountConnector","userIdService","query","userQuery","create","takeUserId","reloadOn","resetOn","getById","UserIdService","QueryService","facadeProviders","useExisting","UserAccountCoreModule","inject","LoggerService","normalizeHttpError","throwError","catchError","defaultOccUserAccountConfig","backend","occ","endpoints","user","OccUserAccountAdapter","http","occEndpoints","converter","logger","url","buildUrl","urlParams","error","pipeable","HttpClient","OccEndpointsService","ConverterService","UserAccountOccModule","UserAccountModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2,3]}