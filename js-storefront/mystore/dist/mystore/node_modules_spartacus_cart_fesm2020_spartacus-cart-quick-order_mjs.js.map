{"version":3,"file":"node_modules_spartacus_cart_fesm2020_spartacus-cart-quick-order_mjs.js","mappings":"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","sources":["./node_modules/@spartacus/cart/fesm2020/spartacus-cart-quick-order-components.mjs","./node_modules/@spartacus/cart/fesm2020/spartacus-cart-quick-order-core.mjs","./node_modules/@spartacus/cart/fesm2020/spartacus-cart-quick-order.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule, inject, isDevMode, Injectable, Input, ViewChild } from '@angular/core';\nimport * as i3 from '@angular/forms';\nimport { Validators, ReactiveFormsModule, UntypedFormGroup, UntypedFormControl } from '@angular/forms';\nimport * as i1 from '@spartacus/cart/base/root';\nimport { CartAddEntrySuccessEvent, CartAddEntryFailEvent, OrderEntriesSource, ProductImportStatus } from '@spartacus/cart/base/root';\nimport * as i2 from '@spartacus/core';\nimport { GlobalMessageType, I18nModule, provideDefaultConfig, LoggerService, UrlModule } from '@spartacus/core';\nimport { Subscription, merge, of, combineLatest, BehaviorSubject } from 'rxjs';\nimport { map, first, switchMap, filter, tap, catchError, mergeAll, take, distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i2$1 from '@spartacus/storefront';\nimport { FormErrorsModule, ICON_TYPE, AtMessageModule, IconModule, ItemCounterModule, MediaModule, MessageComponentModule, ProgressButtonModule } from '@spartacus/storefront';\nimport * as i1$1 from '@spartacus/cart/quick-order/root';\nimport { QuickOrderOrderEntriesContextToken } from '@spartacus/cart/quick-order/root';\nimport * as i4 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from '@spartacus/cart/quick-order/core';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CartQuickOrderFormComponent {\n    constructor(activeCartService, eventService, formBuilder, globalMessageService) {\n        this.activeCartService = activeCartService;\n        this.eventService = eventService;\n        this.formBuilder = formBuilder;\n        this.globalMessageService = globalMessageService;\n        this.cartIsLoading$ = this.activeCartService\n            .isStable()\n            .pipe(map((loaded) => !loaded));\n        this.cart$ = this.activeCartService.getActive();\n        this.min = 1;\n        this.subscription = new Subscription();\n        this.cartEventsSubscription = new Subscription();\n        this.minQuantityValue = 1;\n    }\n    ngOnInit() {\n        this.buildForm();\n        this.watchQuantityChange();\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n        this.cartEventsSubscription?.unsubscribe();\n    }\n    applyQuickOrder() {\n        if (this.quickOrderForm.invalid) {\n            this.quickOrderForm.markAllAsTouched();\n            return;\n        }\n        const productCode = this.quickOrderForm.get('productCode')?.value;\n        const quantity = this.quickOrderForm.get('quantity')?.value;\n        this.watchAddEntrySuccessEvent();\n        this.watchAddEntryFailEvent();\n        if (productCode && quantity) {\n            this.activeCartService.addEntry(productCode, quantity);\n        }\n    }\n    buildForm() {\n        this.quickOrderForm = this.formBuilder.group({\n            productCode: ['', [Validators.required]],\n            quantity: [\n                this.minQuantityValue,\n                { updateOn: 'blur', validators: [Validators.required] },\n            ],\n        });\n    }\n    watchQuantityChange() {\n        this.subscription.add(this.quickOrderForm\n            .get('quantity')\n            ?.valueChanges.subscribe((value) => this.quickOrderForm\n            .get('quantity')\n            ?.setValue(this.getValidCount(value), { emitEvent: false })));\n    }\n    watchAddEntrySuccessEvent() {\n        this.cartEventsSubscription.add(this.eventService\n            .get(CartAddEntrySuccessEvent)\n            .pipe(first())\n            .subscribe((data) => {\n            let key = 'quickOrderCartForm.stockLevelReached';\n            let productTranslation;\n            let messageType = GlobalMessageType.MSG_TYPE_WARNING;\n            if (data.quantityAdded) {\n                key =\n                    data.quantityAdded > 1\n                        ? 'quickOrderCartForm.entriesWereAdded'\n                        : 'quickOrderCartForm.entryWasAdded';\n                productTranslation =\n                    data.quantityAdded > 1\n                        ? 'quickOrderCartForm.products'\n                        : 'quickOrderCartForm.product';\n                messageType = GlobalMessageType.MSG_TYPE_CONFIRMATION;\n            }\n            this.globalMessageService.add({\n                key,\n                params: {\n                    product: data?.entry?.product?.name || productTranslation,\n                    quantity: data.quantityAdded,\n                },\n            }, messageType);\n            this.resetForm();\n        }));\n    }\n    watchAddEntryFailEvent() {\n        this.cartEventsSubscription.add(this.eventService\n            .get(CartAddEntryFailEvent)\n            .pipe(first())\n            .subscribe(() => {\n            this.globalMessageService.add({\n                key: 'quickOrderCartForm.noResults',\n            }, GlobalMessageType.MSG_TYPE_ERROR);\n        }));\n    }\n    getValidCount(value) {\n        if (value < this.min || !value) {\n            value = this.min;\n        }\n        return value;\n    }\n    resetForm() {\n        this.quickOrderForm.reset();\n    }\n}\nCartQuickOrderFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormComponent, deps: [{ token: i1.ActiveCartFacade }, { token: i2.EventService }, { token: i3.UntypedFormBuilder }, { token: i2.GlobalMessageService }], target: i0.ɵɵFactoryTarget.Component });\nCartQuickOrderFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: CartQuickOrderFormComponent, selector: \"cx-cart-quick-order-form\", ngImport: i0, template: \"<ng-container *ngIf=\\\"cart$ | async as cart\\\">\\n  <div class=\\\"cx-cart-quick-order-form-title\\\">\\n    {{ 'quickOrderCartForm.title' | cxTranslate }}\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <form (ngSubmit)=\\\"applyQuickOrder()\\\" [formGroup]=\\\"quickOrderForm\\\">\\n      <div class=\\\"cx-cart-quick-order-form-container\\\">\\n        <span class=\\\"cx-cart-quick-order-form-productID\\\">\\n          <label class=\\\"cx-cart-quick-order-form-label\\\">\\n            {{ 'quickOrderCartForm.productCodeLabel' | cxTranslate }}\\n          </label>\\n          <input\\n            [attr.aria-label]=\\\"\\n              'quickOrderCartForm.entryProductCode' | cxTranslate\\n            \\\"\\n            aria-required=\\\"true\\\"\\n            class=\\\"form-control input-product-code\\\"\\n            formControlName=\\\"productCode\\\"\\n            required=\\\"true\\\"\\n            placeholder=\\\"{{\\n              'quickOrderCartForm.productCodePlaceholder' | cxTranslate\\n            }}\\\"\\n            type=\\\"text\\\"\\n          />\\n        </span>\\n\\n        <span class=\\\"cx-cart-quick-order-form-qty\\\">\\n          <label class=\\\"cx-cart-quick-order-form-label\\\">\\n            {{ 'quickOrderCartForm.quantityLabel' | cxTranslate }}\\n          </label>\\n          <input\\n            [attr.aria-label]=\\\"'quickOrderCartForm.quantity' | cxTranslate\\\"\\n            aria-required=\\\"true\\\"\\n            class=\\\"form-control input-quantity\\\"\\n            formControlName=\\\"quantity\\\"\\n            required=\\\"true\\\"\\n            type=\\\"number\\\"\\n          />\\n        </span>\\n        <button\\n          [attr.aria-label]=\\\"'quickOrderCartForm.addToCart' | cxTranslate\\\"\\n          [class.disabled]=\\\"cartIsLoading$ | async\\\"\\n          [disabled]=\\\"cartIsLoading$ | async\\\"\\n          class=\\\"btn btn-block btn-secondary apply-quick-order-button\\\"\\n          type=\\\"submit\\\"\\n        >\\n          {{ 'quickOrderCartForm.add' | cxTranslate }}\\n        </button>\\n        <cx-form-errors\\n          [control]=\\\"quickOrderForm.get('productCode')\\\"\\n        ></cx-form-errors>\\n        <cx-form-errors\\n          [control]=\\\"quickOrderForm.get('quantity')\\\"\\n        ></cx-form-errors>\\n      </div>\\n    </form></div\\n></ng-container>\\n\", dependencies: [{ kind: \"directive\", type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NumberValueAccessor, selector: \"input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i3.RequiredValidator, selector: \":not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]\", inputs: [\"required\"] }, { kind: \"directive\", type: i3.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i3.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"component\", type: i2$1.FormErrorsComponent, selector: \"cx-form-errors\", inputs: [\"prefix\", \"translationParams\", \"control\"] }, { kind: \"pipe\", type: i6.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-cart-quick-order-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<ng-container *ngIf=\\\"cart$ | async as cart\\\">\\n  <div class=\\\"cx-cart-quick-order-form-title\\\">\\n    {{ 'quickOrderCartForm.title' | cxTranslate }}\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <form (ngSubmit)=\\\"applyQuickOrder()\\\" [formGroup]=\\\"quickOrderForm\\\">\\n      <div class=\\\"cx-cart-quick-order-form-container\\\">\\n        <span class=\\\"cx-cart-quick-order-form-productID\\\">\\n          <label class=\\\"cx-cart-quick-order-form-label\\\">\\n            {{ 'quickOrderCartForm.productCodeLabel' | cxTranslate }}\\n          </label>\\n          <input\\n            [attr.aria-label]=\\\"\\n              'quickOrderCartForm.entryProductCode' | cxTranslate\\n            \\\"\\n            aria-required=\\\"true\\\"\\n            class=\\\"form-control input-product-code\\\"\\n            formControlName=\\\"productCode\\\"\\n            required=\\\"true\\\"\\n            placeholder=\\\"{{\\n              'quickOrderCartForm.productCodePlaceholder' | cxTranslate\\n            }}\\\"\\n            type=\\\"text\\\"\\n          />\\n        </span>\\n\\n        <span class=\\\"cx-cart-quick-order-form-qty\\\">\\n          <label class=\\\"cx-cart-quick-order-form-label\\\">\\n            {{ 'quickOrderCartForm.quantityLabel' | cxTranslate }}\\n          </label>\\n          <input\\n            [attr.aria-label]=\\\"'quickOrderCartForm.quantity' | cxTranslate\\\"\\n            aria-required=\\\"true\\\"\\n            class=\\\"form-control input-quantity\\\"\\n            formControlName=\\\"quantity\\\"\\n            required=\\\"true\\\"\\n            type=\\\"number\\\"\\n          />\\n        </span>\\n        <button\\n          [attr.aria-label]=\\\"'quickOrderCartForm.addToCart' | cxTranslate\\\"\\n          [class.disabled]=\\\"cartIsLoading$ | async\\\"\\n          [disabled]=\\\"cartIsLoading$ | async\\\"\\n          class=\\\"btn btn-block btn-secondary apply-quick-order-button\\\"\\n          type=\\\"submit\\\"\\n        >\\n          {{ 'quickOrderCartForm.add' | cxTranslate }}\\n        </button>\\n        <cx-form-errors\\n          [control]=\\\"quickOrderForm.get('productCode')\\\"\\n        ></cx-form-errors>\\n        <cx-form-errors\\n          [control]=\\\"quickOrderForm.get('quantity')\\\"\\n        ></cx-form-errors>\\n      </div>\\n    </form></div\\n></ng-container>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1.ActiveCartFacade }, { type: i2.EventService }, { type: i3.UntypedFormBuilder }, { type: i2.GlobalMessageService }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass CartQuickOrderFormModule {\n}\nCartQuickOrderFormModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nCartQuickOrderFormModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormModule, declarations: [CartQuickOrderFormComponent], imports: [CommonModule, ReactiveFormsModule, I18nModule, FormErrorsModule], exports: [CartQuickOrderFormComponent] });\nCartQuickOrderFormModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                CartQuickOrderFormComponent: {\n                    component: CartQuickOrderFormComponent,\n                },\n            },\n        }),\n    ], imports: [CommonModule, ReactiveFormsModule, I18nModule, FormErrorsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: CartQuickOrderFormModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, ReactiveFormsModule, I18nModule, FormErrorsModule],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                CartQuickOrderFormComponent: {\n                                    component: CartQuickOrderFormComponent,\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [CartQuickOrderFormComponent],\n                    exports: [CartQuickOrderFormComponent],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\nclass QuickOrderOrderEntriesContext {\n    constructor(quickOrderService, productConnector) {\n        this.quickOrderService = quickOrderService;\n        this.productConnector = productConnector;\n        this.type = OrderEntriesSource.QUICK_ORDER;\n        this.logger = inject(LoggerService);\n    }\n    getEntries() {\n        return this.quickOrderService.getEntries();\n    }\n    addEntries(productsData) {\n        return merge(productsData.map((productData) => this.quickOrderService\n            .canAdd(productData.productCode, productsData)\n            .pipe(switchMap((canAdd) => {\n            if (canAdd) {\n                return this.productConnector.get(productData.productCode).pipe(filter((product) => !!product), tap((product) => {\n                    this.quickOrderService.addProduct(product, productData.quantity);\n                }), map((product) => this.handleResults(product, productData)), catchError((response) => {\n                    return of(this.handleErrors(response, productData.productCode));\n                }));\n            }\n            else {\n                return of({\n                    productCode: productData.productCode,\n                    statusCode: ProductImportStatus.LIMIT_EXCEEDED,\n                });\n            }\n        })))).pipe(mergeAll(), take(productsData.length));\n    }\n    handleResults(product, productData) {\n        if (product.stock?.stockLevel &&\n            productData.quantity > product.stock.stockLevel) {\n            return {\n                productCode: productData.productCode,\n                productName: product?.name,\n                statusCode: ProductImportStatus.LOW_STOCK,\n                quantity: productData.quantity,\n                quantityAdded: product.stock.stockLevel,\n            };\n        }\n        else if (product.stock?.stockLevelStatus === 'outOfStock') {\n            return {\n                productCode: productData.productCode,\n                statusCode: ProductImportStatus.NO_STOCK,\n                productName: product?.name,\n            };\n        }\n        else {\n            return {\n                productCode: productData.productCode,\n                statusCode: ProductImportStatus.SUCCESS,\n            };\n        }\n    }\n    handleErrors(response, productCode) {\n        if (response?.error?.errors[0].type === 'UnknownIdentifierError') {\n            return {\n                productCode,\n                statusCode: ProductImportStatus.UNKNOWN_IDENTIFIER,\n            };\n        }\n        else {\n            if (isDevMode()) {\n                this.logger.warn('Unrecognized cart add entry action type while mapping messages', response);\n            }\n            return {\n                productCode,\n                statusCode: ProductImportStatus.UNKNOWN_ERROR,\n            };\n        }\n    }\n}\nQuickOrderOrderEntriesContext.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderOrderEntriesContext, deps: [{ token: i1$1.QuickOrderFacade }, { token: i2.ProductConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nQuickOrderOrderEntriesContext.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderOrderEntriesContext, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderOrderEntriesContext, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.QuickOrderFacade }, { type: i2.ProductConnector }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst SEARCH_BOX_ACTIVE_CLASS = 'quick-order-searchbox-is-active';\nclass QuickOrderFormComponent {\n    constructor(config, cd, quickOrderService, winRef) {\n        this.config = config;\n        this.cd = cd;\n        this.quickOrderService = quickOrderService;\n        this.winRef = winRef;\n        this.iconTypes = ICON_TYPE;\n        this.isSearching = false;\n        this.noResults = false;\n        this.results = [];\n        this.subscription = new Subscription();\n        this.searchSubscription = new Subscription();\n    }\n    ngOnInit() {\n        this.buildForm();\n        this.subscription.add(this.watchProductAdd());\n        this.subscription.add(this.watchQueryChange());\n    }\n    onBlur(event) {\n        // Use timeout to detect changes\n        setTimeout(() => {\n            if (!this.isSuggestionFocused()) {\n                this.blurSuggestionBox(event);\n            }\n        });\n    }\n    clear(event) {\n        event?.preventDefault();\n        if (this.isResultsBoxOpen()) {\n            this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, false);\n        }\n        const product = this.form.get('product')?.value;\n        if (!!product) {\n            this.form.reset();\n        }\n        // We have to call 'close' method every time to make sure results list is empty and call detectChanges to change icon type in form\n        this.close();\n        this.cd?.detectChanges();\n    }\n    add(product, event) {\n        event?.preventDefault();\n        // TODO change to nonpurchasable flag once we will support multidimensional products in search and when the purchasable flag will be available in search product response\n        // Check if product is purchasable / non multidimensional\n        if (product.multidimensional) {\n            this.quickOrderService.setNonPurchasableProductError(product);\n            this.clear();\n            return;\n        }\n        else {\n            this.quickOrderService.clearNonPurchasableProductError();\n        }\n        this.quickOrderService.addProduct(product);\n    }\n    addProduct(event) {\n        this.quickOrderService\n            .canAdd()\n            .pipe(take(1))\n            .subscribe((canAdd) => {\n            if (canAdd) {\n                // Add product if there is only one in the result list\n                if (this.results.length === 1) {\n                    this.add(this.results[0], event);\n                    // Add product if there is focus on it\n                }\n                else if (this.getFocusedIndex() !== -1) {\n                    const product = this.results[this.getFocusedIndex()];\n                    this.add(product, event);\n                }\n            }\n        });\n    }\n    focusNextChild(event) {\n        event.preventDefault(); // Negate normal keyscroll\n        if (!this.results.length) {\n            return;\n        }\n        const [results, focusedIndex] = [\n            this.getResultElements(),\n            this.getFocusedIndex(),\n        ];\n        // Focus on first index moving to last\n        if (results.length) {\n            if (focusedIndex >= results.length - 1) {\n                results[0].focus();\n            }\n            else {\n                results[focusedIndex + 1].focus();\n            }\n        }\n    }\n    focusPreviousChild(event) {\n        event.preventDefault(); // Negate normal keyscroll\n        if (!this.results.length) {\n            return;\n        }\n        const [results, focusedIndex] = [\n            this.getResultElements(),\n            this.getFocusedIndex(),\n        ];\n        // Focus on last index moving to first\n        if (results.length) {\n            if (focusedIndex < 1) {\n                results[results.length - 1].focus();\n            }\n            else {\n                results[focusedIndex - 1].focus();\n            }\n        }\n    }\n    isResultsBoxOpen() {\n        return this.winRef\n            ? !!this.winRef.document.querySelector(`.${SEARCH_BOX_ACTIVE_CLASS}`)\n            : false;\n    }\n    canAddProduct() {\n        return this.quickOrderService.canAdd();\n    }\n    open() {\n        this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, true);\n    }\n    // Return result list as HTMLElement array\n    getResultElements() {\n        if (this.winRef) {\n            return Array.from(this.winRef.document.querySelectorAll('.quick-order-results-products > li button'));\n        }\n        else {\n            return [];\n        }\n    }\n    blurSuggestionBox(event) {\n        this.toggleBodyClass(SEARCH_BOX_ACTIVE_CLASS, false);\n        if (event && event.target) {\n            event.target.blur();\n        }\n    }\n    // Return focused element as HTMLElement\n    getFocusedElement() {\n        if (this.winRef) {\n            return this.winRef.document.activeElement;\n        }\n    }\n    getFocusedIndex() {\n        return this.getResultElements().indexOf(this.getFocusedElement());\n    }\n    isSuggestionFocused() {\n        return this.getResultElements().includes(this.getFocusedElement());\n    }\n    toggleBodyClass(className, add) {\n        // TODO(#14058): Remove condition\n        if (this.winRef) {\n            if (add === undefined) {\n                this.winRef.document.body.classList.toggle(className);\n            }\n            else {\n                add\n                    ? this.winRef.document.body.classList.add(className)\n                    : this.winRef.document.body.classList.remove(className);\n            }\n        }\n    }\n    buildForm() {\n        const form = new UntypedFormGroup({});\n        form.setControl('product', new UntypedFormControl(null));\n        this.form = form;\n    }\n    isEmpty(string) {\n        return string?.trim() === '' || string == null;\n    }\n    watchQueryChange() {\n        return this.form.valueChanges\n            .pipe(distinctUntilChanged(), debounceTime(300), filter((value) => {\n            if (this.config?.quickOrder?.searchForm) {\n                //Check if input to quick order is an empty after deleting input manually\n                if (this.isEmpty(value.product)) {\n                    //Clear recommendation results on empty string\n                    this.clear();\n                    return false;\n                }\n                return (!!value.product &&\n                    value.product.length >=\n                        this.config.quickOrder?.searchForm?.minCharactersBeforeRequest);\n            }\n            return value;\n        }))\n            .subscribe((value) => {\n            this.searchProducts(value.product);\n        });\n    }\n    searchProducts(query) {\n        this.searchSubscription.add(this.canAddProduct()\n            .pipe(filter(Boolean), switchMap(() => this.quickOrderService\n            .searchProducts(query, this.config?.quickOrder?.searchForm?.maxProducts)\n            .pipe(take(1))))\n            .subscribe((products) => {\n            this.results = products;\n            if (this.results.length) {\n                this.noResults = false;\n                this.open();\n            }\n            else {\n                this.noResults = true;\n            }\n            this.cd?.detectChanges();\n        }));\n    }\n    clearResults() {\n        this.results = [];\n    }\n    close() {\n        this.resetSearchSubscription();\n        this.clearResults();\n        this.noResults = false;\n    }\n    resetSearchSubscription() {\n        this.searchSubscription.unsubscribe();\n        this.searchSubscription = new Subscription();\n    }\n    watchProductAdd() {\n        return this.quickOrderService\n            .getProductAdded()\n            .subscribe(() => this.clear());\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\nQuickOrderFormComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderFormComponent, deps: [{ token: i2.Config }, { token: i0.ChangeDetectorRef }, { token: i1$1.QuickOrderFacade }, { token: i2.WindowRef }], target: i0.ɵɵFactoryTarget.Component });\nQuickOrderFormComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: QuickOrderFormComponent, selector: \"cx-quick-order-form\", inputs: { limit: \"limit\" }, ngImport: i0, template: \"<form [formGroup]=\\\"form\\\" class=\\\"quick-order-form-container\\\">\\n  <div\\n    class=\\\"quick-order-form-input\\\"\\n    role=\\\"search\\\"\\n    [attr.aria-label]=\\\"'quickOrderForm.quickOrderSearch' | cxTranslate\\\"\\n  >\\n    <input\\n      (blur)=\\\"onBlur($event)\\\"\\n      (focus)=\\\"open()\\\"\\n      (keydown.arrowdown)=\\\"focusNextChild($event)\\\"\\n      (keydown.arrowup)=\\\"focusPreviousChild($event)\\\"\\n      (keydown.enter)=\\\"addProduct($event)\\\"\\n      (keydown.escape)=\\\"clear($event)\\\"\\n      [attr.aria-label]=\\\"\\n        'quickOrderForm.searchBoxLabel' | cxTranslate: { limit: limit }\\n      \\\"\\n      aria-controls=\\\"quick-order-search-results\\\"\\n      aria-describedby=\\\"quickOrderFormInitialDescription\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"product\\\"\\n      placeholder=\\\"{{ 'quickOrderForm.placeholder' | cxTranslate }}\\\"\\n      type=\\\"text\\\"\\n    />\\n\\n    <button\\n      *ngIf=\\\"form.get('product')?.value; else searchIcon\\\"\\n      (click)=\\\"clear($event)\\\"\\n      (keydown.enter)=\\\"clear($event)\\\"\\n      [attr.aria-label]=\\\"'common.reset' | cxTranslate\\\"\\n      class=\\\"quick-order-form-reset-icon\\\"\\n    >\\n      <cx-icon [type]=\\\"iconTypes.RESET\\\"></cx-icon>\\n    </button>\\n\\n    <ng-template #searchIcon>\\n      <button\\n        [attr.aria-label]=\\\"'common.search' | cxTranslate\\\"\\n        class=\\\"quick-order-form-search-icon\\\"\\n        tabindex=\\\"-1\\\"\\n      >\\n        <cx-icon [type]=\\\"iconTypes.SEARCH\\\"></cx-icon>\\n      </button>\\n    </ng-template>\\n\\n    <span\\n      *ngIf=\\\"!(canAddProduct() | async) && form.get('product')?.dirty\\\"\\n      class=\\\"list-limit-reached-text\\\"\\n      role=\\\"alert\\\"\\n    >\\n      {{ 'quickOrderForm.listLimitReached' | cxTranslate }}\\n    </span>\\n  </div>\\n\\n  <div\\n    *ngIf=\\\"isResultsBoxOpen()\\\"\\n    class=\\\"quick-order-results\\\"\\n    role=\\\"dialog\\\"\\n    id=\\\"quick-order-search-results\\\"\\n  >\\n    <ul\\n      *ngIf=\\\"results.length\\\"\\n      class=\\\"quick-order-results-products\\\"\\n      role=\\\"listbox\\\"\\n    >\\n      <li\\n        *ngFor=\\\"let product of results; let i = index\\\"\\n        class=\\\"quick-order-results-product-container\\\"\\n      >\\n        <button\\n          (blur)=\\\"onBlur($event)\\\"\\n          (mousedown)=\\\"add(product, $event)\\\"\\n          (keydown.arrowdown)=\\\"focusNextChild($event)\\\"\\n          (keydown.arrowup)=\\\"focusPreviousChild($event)\\\"\\n          (keydown.enter)=\\\"add(product, $event)\\\"\\n          (keydown.escape)=\\\"clear($event)\\\"\\n          [class.has-media]=\\\"\\n            config?.quickOrder?.searchForm?.displayProductImages\\n          \\\"\\n          class=\\\"quick-order-results-product\\\"\\n          role=\\\"option\\\"\\n        >\\n          <cx-media\\n            *ngIf=\\\"config?.quickOrder?.searchForm?.displayProductImages\\\"\\n            [alt]=\\\"product.name\\\"\\n            [container]=\\\"product.images?.PRIMARY\\\"\\n            class=\\\"media\\\"\\n            format=\\\"thumbnail\\\"\\n            role=\\\"presentation\\\"\\n          ></cx-media>\\n          <div class=\\\"name\\\" [innerHTML]=\\\"product.name\\\"></div>\\n          <span class=\\\"id\\\">\\n            {{\\n              'quickOrderForm.id'\\n                | cxTranslate\\n                  : {\\n                      id: product.code\\n                    }\\n            }}\\n          </span>\\n          <span class=\\\"price\\\">{{ product.price?.formattedValue }}</span>\\n        </button>\\n      </li>\\n    </ul>\\n\\n    <span *ngIf=\\\"noResults\\\" class=\\\"quick-order-no-results\\\">\\n      {{ 'quickOrderForm.noResults' | cxTranslate }}\\n    </span>\\n  </div>\\n</form>\\n\\n<label\\n  aria-live=\\\"polite\\\"\\n  id=\\\"quickOrderFormInitialDescription\\\"\\n  aria-atomic=\\\"true\\\"\\n  class=\\\"cx-visually-hidden\\\"\\n>\\n  {{\\n    results.length\\n      ? ('quickOrderForm.productsResults'\\n        | cxTranslate: { count: results.length })\\n      : ''\\n  }}\\n  {{ 'quickOrderForm.initialDescription' | cxTranslate }}\\n</label>\\n\", dependencies: [{ kind: \"directive\", type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i2$1.IconComponent, selector: \"cx-icon,[cxIcon]\", inputs: [\"cxIcon\", \"type\"] }, { kind: \"component\", type: i2$1.MediaComponent, selector: \"cx-media\", inputs: [\"container\", \"format\", \"alt\", \"role\", \"loading\"], outputs: [\"loaded\"] }, { kind: \"directive\", type: i3.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i3.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i3.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i3.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i3.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i3.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"pipe\", type: i6.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderFormComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-quick-order-form', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<form [formGroup]=\\\"form\\\" class=\\\"quick-order-form-container\\\">\\n  <div\\n    class=\\\"quick-order-form-input\\\"\\n    role=\\\"search\\\"\\n    [attr.aria-label]=\\\"'quickOrderForm.quickOrderSearch' | cxTranslate\\\"\\n  >\\n    <input\\n      (blur)=\\\"onBlur($event)\\\"\\n      (focus)=\\\"open()\\\"\\n      (keydown.arrowdown)=\\\"focusNextChild($event)\\\"\\n      (keydown.arrowup)=\\\"focusPreviousChild($event)\\\"\\n      (keydown.enter)=\\\"addProduct($event)\\\"\\n      (keydown.escape)=\\\"clear($event)\\\"\\n      [attr.aria-label]=\\\"\\n        'quickOrderForm.searchBoxLabel' | cxTranslate: { limit: limit }\\n      \\\"\\n      aria-controls=\\\"quick-order-search-results\\\"\\n      aria-describedby=\\\"quickOrderFormInitialDescription\\\"\\n      class=\\\"form-control\\\"\\n      formControlName=\\\"product\\\"\\n      placeholder=\\\"{{ 'quickOrderForm.placeholder' | cxTranslate }}\\\"\\n      type=\\\"text\\\"\\n    />\\n\\n    <button\\n      *ngIf=\\\"form.get('product')?.value; else searchIcon\\\"\\n      (click)=\\\"clear($event)\\\"\\n      (keydown.enter)=\\\"clear($event)\\\"\\n      [attr.aria-label]=\\\"'common.reset' | cxTranslate\\\"\\n      class=\\\"quick-order-form-reset-icon\\\"\\n    >\\n      <cx-icon [type]=\\\"iconTypes.RESET\\\"></cx-icon>\\n    </button>\\n\\n    <ng-template #searchIcon>\\n      <button\\n        [attr.aria-label]=\\\"'common.search' | cxTranslate\\\"\\n        class=\\\"quick-order-form-search-icon\\\"\\n        tabindex=\\\"-1\\\"\\n      >\\n        <cx-icon [type]=\\\"iconTypes.SEARCH\\\"></cx-icon>\\n      </button>\\n    </ng-template>\\n\\n    <span\\n      *ngIf=\\\"!(canAddProduct() | async) && form.get('product')?.dirty\\\"\\n      class=\\\"list-limit-reached-text\\\"\\n      role=\\\"alert\\\"\\n    >\\n      {{ 'quickOrderForm.listLimitReached' | cxTranslate }}\\n    </span>\\n  </div>\\n\\n  <div\\n    *ngIf=\\\"isResultsBoxOpen()\\\"\\n    class=\\\"quick-order-results\\\"\\n    role=\\\"dialog\\\"\\n    id=\\\"quick-order-search-results\\\"\\n  >\\n    <ul\\n      *ngIf=\\\"results.length\\\"\\n      class=\\\"quick-order-results-products\\\"\\n      role=\\\"listbox\\\"\\n    >\\n      <li\\n        *ngFor=\\\"let product of results; let i = index\\\"\\n        class=\\\"quick-order-results-product-container\\\"\\n      >\\n        <button\\n          (blur)=\\\"onBlur($event)\\\"\\n          (mousedown)=\\\"add(product, $event)\\\"\\n          (keydown.arrowdown)=\\\"focusNextChild($event)\\\"\\n          (keydown.arrowup)=\\\"focusPreviousChild($event)\\\"\\n          (keydown.enter)=\\\"add(product, $event)\\\"\\n          (keydown.escape)=\\\"clear($event)\\\"\\n          [class.has-media]=\\\"\\n            config?.quickOrder?.searchForm?.displayProductImages\\n          \\\"\\n          class=\\\"quick-order-results-product\\\"\\n          role=\\\"option\\\"\\n        >\\n          <cx-media\\n            *ngIf=\\\"config?.quickOrder?.searchForm?.displayProductImages\\\"\\n            [alt]=\\\"product.name\\\"\\n            [container]=\\\"product.images?.PRIMARY\\\"\\n            class=\\\"media\\\"\\n            format=\\\"thumbnail\\\"\\n            role=\\\"presentation\\\"\\n          ></cx-media>\\n          <div class=\\\"name\\\" [innerHTML]=\\\"product.name\\\"></div>\\n          <span class=\\\"id\\\">\\n            {{\\n              'quickOrderForm.id'\\n                | cxTranslate\\n                  : {\\n                      id: product.code\\n                    }\\n            }}\\n          </span>\\n          <span class=\\\"price\\\">{{ product.price?.formattedValue }}</span>\\n        </button>\\n      </li>\\n    </ul>\\n\\n    <span *ngIf=\\\"noResults\\\" class=\\\"quick-order-no-results\\\">\\n      {{ 'quickOrderForm.noResults' | cxTranslate }}\\n    </span>\\n  </div>\\n</form>\\n\\n<label\\n  aria-live=\\\"polite\\\"\\n  id=\\\"quickOrderFormInitialDescription\\\"\\n  aria-atomic=\\\"true\\\"\\n  class=\\\"cx-visually-hidden\\\"\\n>\\n  {{\\n    results.length\\n      ? ('quickOrderForm.productsResults'\\n        | cxTranslate: { count: results.length })\\n      : ''\\n  }}\\n  {{ 'quickOrderForm.initialDescription' | cxTranslate }}\\n</label>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i2.Config }, { type: i0.ChangeDetectorRef }, { type: i1$1.QuickOrderFacade }, { type: i2.WindowRef }]; }, propDecorators: { limit: [{\n                type: Input\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderItemComponent {\n    get entry() {\n        return this._entry;\n    }\n    set entry(value) {\n        this._entry = value;\n        this.quantityControl = new UntypedFormControl(this.entry.quantity, {\n            updateOn: 'blur',\n        });\n    }\n    constructor(cd, quickOrderService) {\n        this.cd = cd;\n        this.quickOrderService = quickOrderService;\n        this.loading = false;\n        this.subscription = new Subscription();\n    }\n    ngOnInit() {\n        this.subscription.add(this.quantityControl.valueChanges.subscribe(() => {\n            this.quickOrderService.updateEntryQuantity(this.index, this.quantityControl.value);\n        }));\n        this.subscription.add(this.watchProductAdd());\n    }\n    removeEntry() {\n        this.quickOrderService.softDeleteEntry(this.index);\n        this.cd.detectChanges();\n    }\n    watchProductAdd() {\n        return this.quickOrderService.getProductAdded().subscribe((productCode) => {\n            if (productCode === this.entry.product?.code) {\n                this.quantityControl = new UntypedFormControl(this.entry.quantity);\n                this.cd.detectChanges();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this.subscription?.unsubscribe();\n    }\n}\nQuickOrderItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1$1.QuickOrderFacade }], target: i0.ɵɵFactoryTarget.Component });\nQuickOrderItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: QuickOrderItemComponent, selector: \"[cx-quick-order-item], cx-quick-order-item\", inputs: { entry: \"entry\", index: \"index\", loading: \"loading\" }, ngImport: i0, template: \"<td role=\\\"cell\\\">\\n  <div class=\\\"cx-table-item-container\\\">\\n    <a\\n      [ngClass]=\\\"{\\n        disabled: loading,\\n        'img-missing': !entry?.product?.images?.PRIMARY\\n      }\\\"\\n      [routerLink]=\\\"{ cxRoute: 'product', params: entry.product } | cxUrl\\\"\\n      tabindex=\\\"-1\\\"\\n    >\\n      <cx-media\\n        [container]=\\\"entry?.product?.images?.PRIMARY\\\"\\n        [alt]=\\\"entry?.product?.name\\\"\\n        format=\\\"cartIcon\\\"\\n      ></cx-media>\\n    </a>\\n    <div class=\\\"cx-info\\\">\\n      <div class=\\\"cx-name\\\">\\n        <a\\n          [ngClass]=\\\"{ disabled: loading }\\\"\\n          [routerLink]=\\\"{ cxRoute: 'product', params: entry.product } | cxUrl\\\"\\n          class=\\\"cx-link\\\"\\n          >{{ entry.product?.name || '-' }}\\n        </a>\\n      </div>\\n\\n      <div class=\\\"cx-code\\\">\\n        {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\\n      </div>\\n    </div>\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-price\\\">\\n  <div class=\\\"cx-mobile-header\\\">\\n    {{ 'quickOrderTable.itemPrice' | cxTranslate }}\\n  </div>\\n  <div class=\\\"cx-value\\\">\\n    {{ entry.basePrice?.formattedValue || '-' }}\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-quantity\\\">\\n  <div class=\\\"cx-mobile-header\\\">\\n    {{ 'quickOrderTable.qty' | cxTranslate }}\\n  </div>\\n  <div class=\\\"cx-value\\\">\\n    <cx-item-counter\\n      [control]=\\\"quantityControl\\\"\\n      [max]=\\\"entry.product?.stock?.stockLevel\\\"\\n      [readonly]=\\\"loading\\\"\\n    ></cx-item-counter>\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-actions\\\">\\n  <button\\n    (click)=\\\"removeEntry()\\\"\\n    [attr.aria-label]=\\\"'common.remove' | cxTranslate\\\"\\n    [disabled]=\\\"loading\\\"\\n    class=\\\"btn btn-tertiary\\\"\\n  >\\n    {{ 'common.remove' | cxTranslate }}\\n  </button>\\n</td>\\n\", dependencies: [{ kind: \"directive\", type: i6.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"component\", type: i2$1.ItemCounterComponent, selector: \"cx-item-counter\", inputs: [\"control\", \"min\", \"max\", \"step\", \"allowZero\", \"readonly\"] }, { kind: \"component\", type: i2$1.MediaComponent, selector: \"cx-media\", inputs: [\"container\", \"format\", \"alt\", \"role\", \"loading\"], outputs: [\"loaded\"] }, { kind: \"directive\", type: i4.RouterLink, selector: \"[routerLink]\", inputs: [\"target\", \"queryParams\", \"fragment\", \"queryParamsHandling\", \"state\", \"relativeTo\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"routerLink\"] }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"cxTranslate\" }, { kind: \"pipe\", type: i2.UrlPipe, name: \"cxUrl\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderItemComponent, decorators: [{\n            type: Component,\n            args: [{ selector: '[cx-quick-order-item], cx-quick-order-item', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<td role=\\\"cell\\\">\\n  <div class=\\\"cx-table-item-container\\\">\\n    <a\\n      [ngClass]=\\\"{\\n        disabled: loading,\\n        'img-missing': !entry?.product?.images?.PRIMARY\\n      }\\\"\\n      [routerLink]=\\\"{ cxRoute: 'product', params: entry.product } | cxUrl\\\"\\n      tabindex=\\\"-1\\\"\\n    >\\n      <cx-media\\n        [container]=\\\"entry?.product?.images?.PRIMARY\\\"\\n        [alt]=\\\"entry?.product?.name\\\"\\n        format=\\\"cartIcon\\\"\\n      ></cx-media>\\n    </a>\\n    <div class=\\\"cx-info\\\">\\n      <div class=\\\"cx-name\\\">\\n        <a\\n          [ngClass]=\\\"{ disabled: loading }\\\"\\n          [routerLink]=\\\"{ cxRoute: 'product', params: entry.product } | cxUrl\\\"\\n          class=\\\"cx-link\\\"\\n          >{{ entry.product?.name || '-' }}\\n        </a>\\n      </div>\\n\\n      <div class=\\\"cx-code\\\">\\n        {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\\n      </div>\\n    </div>\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-price\\\">\\n  <div class=\\\"cx-mobile-header\\\">\\n    {{ 'quickOrderTable.itemPrice' | cxTranslate }}\\n  </div>\\n  <div class=\\\"cx-value\\\">\\n    {{ entry.basePrice?.formattedValue || '-' }}\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-quantity\\\">\\n  <div class=\\\"cx-mobile-header\\\">\\n    {{ 'quickOrderTable.qty' | cxTranslate }}\\n  </div>\\n  <div class=\\\"cx-value\\\">\\n    <cx-item-counter\\n      [control]=\\\"quantityControl\\\"\\n      [max]=\\\"entry.product?.stock?.stockLevel\\\"\\n      [readonly]=\\\"loading\\\"\\n    ></cx-item-counter>\\n  </div>\\n</td>\\n\\n<td role=\\\"cell\\\" class=\\\"cx-actions\\\">\\n  <button\\n    (click)=\\\"removeEntry()\\\"\\n    [attr.aria-label]=\\\"'common.remove' | cxTranslate\\\"\\n    [disabled]=\\\"loading\\\"\\n    class=\\\"btn btn-tertiary\\\"\\n  >\\n    {{ 'common.remove' | cxTranslate }}\\n  </button>\\n</td>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1$1.QuickOrderFacade }]; }, propDecorators: { entry: [{\n                type: Input,\n                args: ['entry']\n            }], index: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderTableComponent {\n    constructor() {\n        this.entries = [];\n        this.loading = false;\n    }\n}\nQuickOrderTableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderTableComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nQuickOrderTableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: QuickOrderTableComponent, selector: \"cx-quick-order-table\", inputs: { entries: \"entries\", loading: \"loading\" }, ngImport: i0, template: \"<table\\n  *ngIf=\\\"entries?.length > 0\\\"\\n  class=\\\"cx-quick-order-table-wrapper\\\"\\n  role=\\\"table\\\"\\n>\\n  <caption class=\\\"cx-visually-hidden\\\">\\n    {{\\n      'quickOrderTable.caption' | cxTranslate\\n    }}\\n  </caption>\\n  <thead>\\n    <tr role=\\\"row\\\" class=\\\"cx-item-list-header cx-quick-order-table-header\\\">\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-desc\\\">\\n        {{ 'quickOrderTable.product' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-price\\\">\\n        {{ 'quickOrderTable.price' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-qty\\\">\\n        {{ 'quickOrderTable.quantity' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-actions\\\">\\n        {{ 'quickOrderTable.actions' | cxTranslate }}\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody class=\\\"cx-item-list-items\\\">\\n    <tr\\n      cx-quick-order-item\\n      class=\\\"cx-item-list-row cx-quick-order-table-row\\\"\\n      *ngFor=\\\"let entry of entries; let i = index\\\"\\n      [entry]=\\\"entry\\\"\\n      [index]=\\\"i\\\"\\n      [loading]=\\\"loading\\\"\\n    ></tr>\\n  </tbody>\\n</table>\\n\", dependencies: [{ kind: \"directive\", type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: QuickOrderItemComponent, selector: \"[cx-quick-order-item], cx-quick-order-item\", inputs: [\"entry\", \"index\", \"loading\"] }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderTableComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-quick-order-table', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<table\\n  *ngIf=\\\"entries?.length > 0\\\"\\n  class=\\\"cx-quick-order-table-wrapper\\\"\\n  role=\\\"table\\\"\\n>\\n  <caption class=\\\"cx-visually-hidden\\\">\\n    {{\\n      'quickOrderTable.caption' | cxTranslate\\n    }}\\n  </caption>\\n  <thead>\\n    <tr role=\\\"row\\\" class=\\\"cx-item-list-header cx-quick-order-table-header\\\">\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-desc\\\">\\n        {{ 'quickOrderTable.product' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-price\\\">\\n        {{ 'quickOrderTable.price' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-qty\\\">\\n        {{ 'quickOrderTable.quantity' | cxTranslate }}\\n      </th>\\n      <th role=\\\"columnheader\\\" class=\\\"cx-item-list-actions\\\">\\n        {{ 'quickOrderTable.actions' | cxTranslate }}\\n      </th>\\n    </tr>\\n  </thead>\\n  <tbody class=\\\"cx-item-list-items\\\">\\n    <tr\\n      cx-quick-order-item\\n      class=\\\"cx-item-list-row cx-quick-order-table-row\\\"\\n      *ngFor=\\\"let entry of entries; let i = index\\\"\\n      [entry]=\\\"entry\\\"\\n      [index]=\\\"i\\\"\\n      [loading]=\\\"loading\\\"\\n    ></tr>\\n  </tbody>\\n</table>\\n\" }]\n        }], propDecorators: { entries: [{\n                type: Input\n            }], loading: [{\n                type: Input\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderComponent {\n    constructor(activeCartService, component, globalMessageService, quickOrderService, quickOrderStatePersistenceService) {\n        this.activeCartService = activeCartService;\n        this.component = component;\n        this.globalMessageService = globalMessageService;\n        this.quickOrderService = quickOrderService;\n        this.quickOrderStatePersistenceService = quickOrderStatePersistenceService;\n        this.quickOrderListLimit$ = this.component.data$.pipe(map((data) => data.quickOrderListLimit), tap((limit) => {\n            if (!!limit) {\n                this.quickOrderService.setListLimit(limit);\n            }\n        }));\n        this.isCartStable$ = combineLatest([\n            this.activeCartService.getActiveCartId(),\n            this.activeCartService.isStable(),\n        ]).pipe(map(([activeCartId, isStable]) => (!activeCartId ? true : isStable)));\n        this.globalMessageType = GlobalMessageType;\n        this.cartErrors$ = new BehaviorSubject([]);\n        this.cartWarnings$ = new BehaviorSubject([]);\n        this.cartSuccesses$ = new BehaviorSubject([]);\n        this.showAddToCartInformation$ = new BehaviorSubject(false);\n        this.nonPurchasableProductError$ = new BehaviorSubject(null);\n    }\n    ngOnInit() {\n        this.cartId$ = this.activeCartService.getActiveCartId();\n        this.entries$ = this.quickOrderService.getEntries();\n        this.quickOrderStatePersistenceService.initSync();\n    }\n    ngOnDestroy() {\n        this.quickOrderService.clearDeletedEntries();\n    }\n    get errors$() {\n        return this.cartErrors$.asObservable();\n    }\n    get warnings$() {\n        return this.cartWarnings$.asObservable();\n    }\n    get successes$() {\n        return this.cartSuccesses$.asObservable();\n    }\n    get nonPurchasableError$() {\n        return this.quickOrderService.getNonPurchasableProductError();\n    }\n    get addToCartInformation$() {\n        return this.showAddToCartInformation$.asObservable();\n    }\n    get softDeletedEntries$() {\n        return this.quickOrderService.getSoftDeletedEntries();\n    }\n    clear() {\n        this.quickOrderService.clearList();\n        this.globalMessageService.add({\n            key: 'quickOrderTable.listCleared',\n        }, GlobalMessageType.MSG_TYPE_INFO);\n    }\n    addToCart(orderEntries) {\n        if (!orderEntries.length) {\n            this.showAddToCartInformation$.next(true);\n            return;\n        }\n        this.clearStatuses();\n        this.quickOrderService\n            .addToCart()\n            .pipe(first())\n            .subscribe(([entries, errors]) => {\n            errors.forEach((err) => {\n                if (!err.entry) {\n                    err.entry = orderEntries.find((e) => e.product?.code === err.productCode);\n                }\n            });\n            this.extractErrors(errors);\n            this.extractWarnings(errors);\n            if (!errors.length) {\n                this.showAddedToCartSuccessMessage();\n            }\n            else {\n                this.extractSuccesses(errors, entries);\n            }\n        });\n    }\n    clearErrors() {\n        this.cartErrors$.next([]);\n    }\n    clearWarnings() {\n        this.cartWarnings$.next([]);\n    }\n    clearSuccesses() {\n        this.cartSuccesses$.next([]);\n    }\n    clearAddToCartInformation() {\n        this.showAddToCartInformation$.next(false);\n    }\n    undoDeletion(entry) {\n        if (entry.product?.code) {\n            this.quickOrderService.restoreSoftDeletedEntry(entry.product.code);\n        }\n    }\n    clearDeletion(entry) {\n        if (entry.product?.code) {\n            this.quickOrderService.hardDeleteEntry(entry.product.code);\n        }\n    }\n    clearNonPurchasableError() {\n        this.quickOrderService.clearNonPurchasableProductError();\n    }\n    canAddProduct() {\n        return this.quickOrderService.canAdd();\n    }\n    extractErrors(errors) {\n        const noAddedEntries = errors.filter((error) => error.quantityAdded === 0);\n        this.setErrors(noAddedEntries);\n    }\n    extractWarnings(errors) {\n        const warnings = errors.filter((error) => error.quantityAdded !== 0);\n        this.setWarnings(warnings);\n    }\n    extractSuccesses(errors, entries) {\n        const successAddedEntries = [];\n        entries.forEach((entry) => {\n            const element = errors.find((error) => error.productCode === entry.product?.code);\n            if (!element) {\n                successAddedEntries.push(entry);\n            }\n        });\n        this.setSuccesses(successAddedEntries);\n    }\n    clearStatuses() {\n        this.clearErrors();\n        this.clearWarnings();\n        this.clearSuccesses();\n    }\n    showAddedToCartSuccessMessage() {\n        this.globalMessageService.add({\n            key: 'quickOrderTable.addedtoCart',\n        }, GlobalMessageType.MSG_TYPE_CONFIRMATION);\n    }\n    setErrors(errors) {\n        this.cartErrors$.next(errors);\n    }\n    setWarnings(warnings) {\n        this.cartWarnings$.next(warnings);\n    }\n    setSuccesses(entries) {\n        this.cartSuccesses$.next(entries);\n    }\n}\nQuickOrderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponent, deps: [{ token: i1.ActiveCartFacade }, { token: i2$1.CmsComponentData }, { token: i2.GlobalMessageService }, { token: i1$1.QuickOrderFacade }, { token: i5.QuickOrderStatePersistenceService }], target: i0.ɵɵFactoryTarget.Component });\nQuickOrderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.4\", type: QuickOrderComponent, selector: \"cx-quick-order\", viewQueries: [{ propertyName: \"quickOrderForm\", first: true, predicate: [\"quickOrderForm\"], descendants: true }], ngImport: i0, template: \"<div\\n  aria-atomic=\\\"true\\\"\\n  aria-live=\\\"assertive\\\"\\n  aria-relevant=\\\"additions\\\"\\n  class=\\\"quick-order-message-container\\\"\\n>\\n  <ng-container *ngIf=\\\"entries$ | async as entries\\\">\\n    <ng-container *ngIf=\\\"!(canAddProduct() | async)\\\">\\n      <ng-container *ngIf=\\\"quickOrderForm?.form?.get('product')?.dirty\\\">\\n        <cx-message\\n          [text]=\\\"\\n            'quickOrderList.errors.listIsFull'\\n              | cxTranslate: { count: entries.length }\\n          \\\"\\n          [isVisibleCloseButton]=\\\"false\\\"\\n          [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n          class=\\\"quick-order-list-limit-message\\\"\\n        >\\n        </cx-message>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"addToCartInformation$ | async\\\">\\n    <cx-message\\n      (closeMessage)=\\\"clearAddToCartInformation()\\\"\\n      [text]=\\\"\\n        'quickOrderList.informations.addProductBeforeAddingToCart' | cxTranslate\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-add-to-cart-information-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"nonPurchasableError$ | async as nonPurchasableError\\\">\\n    <cx-message\\n      (closeMessage)=\\\"clearNonPurchasableError()\\\"\\n      [text]=\\\"\\n        'quickOrderList.errors.nonPurchasableError'\\n          | cxTranslate: { name: nonPurchasableError.name }\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-non-purchasable-product-error-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"softDeletedEntries$ | async as deletedEntries\\\">\\n    <cx-message\\n      *ngFor=\\\"let deletedEntry of deletedEntries | keyvalue\\\"\\n      (buttonAction)=\\\"undoDeletion(deletedEntry.value)\\\"\\n      (closeMessage)=\\\"clearDeletion(deletedEntry.value)\\\"\\n      [actionButtonText]=\\\"'quickOrderList.undo' | cxTranslate\\\"\\n      [actionButtonMessage]=\\\"\\n        'quickOrderList.revokeUndo'\\n          | cxTranslate: { name: deletedEntry.value.product?.name }\\n      \\\"\\n      [text]=\\\"\\n        'quickOrderList.productWasDeleted'\\n          | cxTranslate: { name: deletedEntry.value.product?.name }\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_CONFIRMATION\\\"\\n      class=\\\"quick-order-deletions-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"errors$ | async as errors\\\">\\n    <cx-message\\n      *ngIf=\\\"errors.length\\\"\\n      (closeMessage)=\\\"clearErrors()\\\"\\n      [accordionText]=\\\"'quickOrderList.errors.reviewErrors' | cxTranslate\\\"\\n      [text]=\\\"'quickOrderList.errorProceedingToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-errors-message\\\"\\n    >\\n      <ul class=\\\"quick-order-errors\\\">\\n        <li *ngFor=\\\"let error of errors\\\" class=\\\"quick-order-error-item\\\">\\n          <span>\\n            {{\\n              'quickOrderList.errors.productIsOutOfStock'\\n                | cxTranslate\\n                  : {\\n                      name: error.entry.product.name,\\n                      code: error.entry.product.code\\n                    }\\n            }}\\n          </span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.errors.outOfStockErrorFound'\\n            | cxTranslate: { count: errors.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"warnings$ | async as warnings\\\">\\n    <cx-message\\n      *ngIf=\\\"warnings.length\\\"\\n      (closeMessage)=\\\"clearWarnings()\\\"\\n      [accordionText]=\\\"'quickOrderList.warnings.reviewWarnings' | cxTranslate\\\"\\n      [text]=\\\"'quickOrderList.warningProceedingToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_WARNING\\\"\\n      class=\\\"quick-order-warnings-message\\\"\\n    >\\n      <ul class=\\\"quick-order-warnings\\\">\\n        <li *ngFor=\\\"let warning of warnings\\\" class=\\\"quick-order-warning-item\\\">\\n          <span>\\n            {{\\n              'quickOrderList.warnings.productWasReduced'\\n                | cxTranslate\\n                  : {\\n                      name: warning.entry.product.name,\\n                      code: warning.entry.product.code,\\n                      quantityAdded: warning.quantityAdded\\n                    }\\n            }}\\n          </span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.warnings.reduceWarningFound'\\n            | cxTranslate: { count: warnings.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"successes$ | async as successes\\\">\\n    <cx-message\\n      *ngIf=\\\"successes.length\\\"\\n      (closeMessage)=\\\"clearSuccesses()\\\"\\n      [text]=\\\"'quickOrderList.successfullyAddedToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_CONFIRMATION\\\"\\n      class=\\\"quick-order-successes-message\\\"\\n    >\\n      <ul class=\\\"quick-order-successes\\\">\\n        <li *ngFor=\\\"let entry of successes\\\" class=\\\"quick-order-success-item\\\">\\n          <span>{{\\n            'quickOrderList.successes.productAddedToCart'\\n              | cxTranslate\\n                : {\\n                    name: entry.product.name,\\n                    code: entry.product.code\\n                  }\\n          }}</span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.successes.addedToCartFound'\\n            | cxTranslate: { count: successes.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"quickOrderListLimit$ | async as quickOrderListLimit\\\">\\n  <ng-container *ngIf=\\\"entries$ | async as entries\\\">\\n    <div class=\\\"quick-order-header\\\">\\n      <h2>\\n        {{ 'quickOrderList.header' | cxTranslate }}\\n      </h2>\\n      <p>\\n        {{\\n          'quickOrderList.subHeader'\\n            | cxTranslate: { limit: quickOrderListLimit }\\n        }}\\n      </p>\\n    </div>\\n\\n    <div class=\\\"quick-order-form-body\\\">\\n      <cx-quick-order-form #quickOrderForm [limit]=\\\"quickOrderListLimit\\\">\\n      </cx-quick-order-form>\\n    </div>\\n\\n    <div class=\\\"quick-order-table-body\\\">\\n      <cx-quick-order-table\\n        [entries]=\\\"entries\\\"\\n        [loading]=\\\"!(isCartStable$ | async)\\\"\\n      ></cx-quick-order-table>\\n    </div>\\n\\n    <div class=\\\"quick-order-footer row\\\">\\n      <div class=\\\"col-xs-12 col-md-5 col-lg-3\\\">\\n        <button\\n          *ngIf=\\\"entries.length\\\"\\n          (click)=\\\"clear()\\\"\\n          [attr.aria-label]=\\\"'quickOrderList.emptyList' | cxTranslate\\\"\\n          [disabled]=\\\"!(isCartStable$ | async)\\\"\\n          class=\\\"btn btn-block btn-secondary clear-button\\\"\\n          type=\\\"button\\\"\\n        >\\n          {{ 'quickOrderList.emptyList' | cxTranslate }}\\n        </button>\\n      </div>\\n\\n      <div class=\\\"col-xs-12 col-md-5 col-lg-3\\\">\\n        <cx-progress-button\\n          (clickEvent)=\\\"addToCart(entries)\\\"\\n          [ariaLabel]=\\\"'quickOrderList.addToCart' | cxTranslate\\\"\\n          [class]=\\\"'btn-block add-button'\\\"\\n          [loading]=\\\"!(isCartStable$ | async)\\\"\\n        >\\n          {{ 'quickOrderList.addToCart' | cxTranslate }}\\n        </cx-progress-button>\\n      </div>\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\", dependencies: [{ kind: \"directive\", type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i2$1.MessageComponent, selector: \"cx-message\", inputs: [\"text\", \"actionButtonText\", \"actionButtonMessage\", \"accordionText\", \"showBody\", \"isVisibleCloseButton\", \"type\"], outputs: [\"closeMessage\", \"buttonAction\"] }, { kind: \"component\", type: i2$1.ProgressButtonComponent, selector: \"cx-progress-button\", inputs: [\"ariaLabel\", \"class\", \"disabled\", \"loading\"], outputs: [\"clickEvent\"] }, { kind: \"component\", type: QuickOrderFormComponent, selector: \"cx-quick-order-form\", inputs: [\"limit\"] }, { kind: \"component\", type: QuickOrderTableComponent, selector: \"cx-quick-order-table\", inputs: [\"entries\", \"loading\"] }, { kind: \"pipe\", type: i6.AsyncPipe, name: \"async\" }, { kind: \"pipe\", type: i6.KeyValuePipe, name: \"keyvalue\" }, { kind: \"pipe\", type: i2.TranslatePipe, name: \"cxTranslate\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'cx-quick-order', changeDetection: ChangeDetectionStrategy.OnPush, template: \"<div\\n  aria-atomic=\\\"true\\\"\\n  aria-live=\\\"assertive\\\"\\n  aria-relevant=\\\"additions\\\"\\n  class=\\\"quick-order-message-container\\\"\\n>\\n  <ng-container *ngIf=\\\"entries$ | async as entries\\\">\\n    <ng-container *ngIf=\\\"!(canAddProduct() | async)\\\">\\n      <ng-container *ngIf=\\\"quickOrderForm?.form?.get('product')?.dirty\\\">\\n        <cx-message\\n          [text]=\\\"\\n            'quickOrderList.errors.listIsFull'\\n              | cxTranslate: { count: entries.length }\\n          \\\"\\n          [isVisibleCloseButton]=\\\"false\\\"\\n          [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n          class=\\\"quick-order-list-limit-message\\\"\\n        >\\n        </cx-message>\\n      </ng-container>\\n    </ng-container>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"addToCartInformation$ | async\\\">\\n    <cx-message\\n      (closeMessage)=\\\"clearAddToCartInformation()\\\"\\n      [text]=\\\"\\n        'quickOrderList.informations.addProductBeforeAddingToCart' | cxTranslate\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-add-to-cart-information-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"nonPurchasableError$ | async as nonPurchasableError\\\">\\n    <cx-message\\n      (closeMessage)=\\\"clearNonPurchasableError()\\\"\\n      [text]=\\\"\\n        'quickOrderList.errors.nonPurchasableError'\\n          | cxTranslate: { name: nonPurchasableError.name }\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-non-purchasable-product-error-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"softDeletedEntries$ | async as deletedEntries\\\">\\n    <cx-message\\n      *ngFor=\\\"let deletedEntry of deletedEntries | keyvalue\\\"\\n      (buttonAction)=\\\"undoDeletion(deletedEntry.value)\\\"\\n      (closeMessage)=\\\"clearDeletion(deletedEntry.value)\\\"\\n      [actionButtonText]=\\\"'quickOrderList.undo' | cxTranslate\\\"\\n      [actionButtonMessage]=\\\"\\n        'quickOrderList.revokeUndo'\\n          | cxTranslate: { name: deletedEntry.value.product?.name }\\n      \\\"\\n      [text]=\\\"\\n        'quickOrderList.productWasDeleted'\\n          | cxTranslate: { name: deletedEntry.value.product?.name }\\n      \\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_CONFIRMATION\\\"\\n      class=\\\"quick-order-deletions-message\\\"\\n    >\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"errors$ | async as errors\\\">\\n    <cx-message\\n      *ngIf=\\\"errors.length\\\"\\n      (closeMessage)=\\\"clearErrors()\\\"\\n      [accordionText]=\\\"'quickOrderList.errors.reviewErrors' | cxTranslate\\\"\\n      [text]=\\\"'quickOrderList.errorProceedingToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_ERROR\\\"\\n      class=\\\"quick-order-errors-message\\\"\\n    >\\n      <ul class=\\\"quick-order-errors\\\">\\n        <li *ngFor=\\\"let error of errors\\\" class=\\\"quick-order-error-item\\\">\\n          <span>\\n            {{\\n              'quickOrderList.errors.productIsOutOfStock'\\n                | cxTranslate\\n                  : {\\n                      name: error.entry.product.name,\\n                      code: error.entry.product.code\\n                    }\\n            }}\\n          </span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.errors.outOfStockErrorFound'\\n            | cxTranslate: { count: errors.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"warnings$ | async as warnings\\\">\\n    <cx-message\\n      *ngIf=\\\"warnings.length\\\"\\n      (closeMessage)=\\\"clearWarnings()\\\"\\n      [accordionText]=\\\"'quickOrderList.warnings.reviewWarnings' | cxTranslate\\\"\\n      [text]=\\\"'quickOrderList.warningProceedingToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_WARNING\\\"\\n      class=\\\"quick-order-warnings-message\\\"\\n    >\\n      <ul class=\\\"quick-order-warnings\\\">\\n        <li *ngFor=\\\"let warning of warnings\\\" class=\\\"quick-order-warning-item\\\">\\n          <span>\\n            {{\\n              'quickOrderList.warnings.productWasReduced'\\n                | cxTranslate\\n                  : {\\n                      name: warning.entry.product.name,\\n                      code: warning.entry.product.code,\\n                      quantityAdded: warning.quantityAdded\\n                    }\\n            }}\\n          </span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.warnings.reduceWarningFound'\\n            | cxTranslate: { count: warnings.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"successes$ | async as successes\\\">\\n    <cx-message\\n      *ngIf=\\\"successes.length\\\"\\n      (closeMessage)=\\\"clearSuccesses()\\\"\\n      [text]=\\\"'quickOrderList.successfullyAddedToCart' | cxTranslate\\\"\\n      [type]=\\\"globalMessageType.MSG_TYPE_CONFIRMATION\\\"\\n      class=\\\"quick-order-successes-message\\\"\\n    >\\n      <ul class=\\\"quick-order-successes\\\">\\n        <li *ngFor=\\\"let entry of successes\\\" class=\\\"quick-order-success-item\\\">\\n          <span>{{\\n            'quickOrderList.successes.productAddedToCart'\\n              | cxTranslate\\n                : {\\n                    name: entry.product.name,\\n                    code: entry.product.code\\n                  }\\n          }}</span>\\n        </li>\\n      </ul>\\n      <div class=\\\"cx-visually-hidden\\\">\\n        {{\\n          'quickOrderList.successes.addedToCartFound'\\n            | cxTranslate: { count: successes.length }\\n        }}\\n      </div>\\n    </cx-message>\\n  </ng-container>\\n</div>\\n\\n<ng-container *ngIf=\\\"quickOrderListLimit$ | async as quickOrderListLimit\\\">\\n  <ng-container *ngIf=\\\"entries$ | async as entries\\\">\\n    <div class=\\\"quick-order-header\\\">\\n      <h2>\\n        {{ 'quickOrderList.header' | cxTranslate }}\\n      </h2>\\n      <p>\\n        {{\\n          'quickOrderList.subHeader'\\n            | cxTranslate: { limit: quickOrderListLimit }\\n        }}\\n      </p>\\n    </div>\\n\\n    <div class=\\\"quick-order-form-body\\\">\\n      <cx-quick-order-form #quickOrderForm [limit]=\\\"quickOrderListLimit\\\">\\n      </cx-quick-order-form>\\n    </div>\\n\\n    <div class=\\\"quick-order-table-body\\\">\\n      <cx-quick-order-table\\n        [entries]=\\\"entries\\\"\\n        [loading]=\\\"!(isCartStable$ | async)\\\"\\n      ></cx-quick-order-table>\\n    </div>\\n\\n    <div class=\\\"quick-order-footer row\\\">\\n      <div class=\\\"col-xs-12 col-md-5 col-lg-3\\\">\\n        <button\\n          *ngIf=\\\"entries.length\\\"\\n          (click)=\\\"clear()\\\"\\n          [attr.aria-label]=\\\"'quickOrderList.emptyList' | cxTranslate\\\"\\n          [disabled]=\\\"!(isCartStable$ | async)\\\"\\n          class=\\\"btn btn-block btn-secondary clear-button\\\"\\n          type=\\\"button\\\"\\n        >\\n          {{ 'quickOrderList.emptyList' | cxTranslate }}\\n        </button>\\n      </div>\\n\\n      <div class=\\\"col-xs-12 col-md-5 col-lg-3\\\">\\n        <cx-progress-button\\n          (clickEvent)=\\\"addToCart(entries)\\\"\\n          [ariaLabel]=\\\"'quickOrderList.addToCart' | cxTranslate\\\"\\n          [class]=\\\"'btn-block add-button'\\\"\\n          [loading]=\\\"!(isCartStable$ | async)\\\"\\n        >\\n          {{ 'quickOrderList.addToCart' | cxTranslate }}\\n        </cx-progress-button>\\n      </div>\\n    </div>\\n  </ng-container>\\n</ng-container>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i1.ActiveCartFacade }, { type: i2$1.CmsComponentData }, { type: i2.GlobalMessageService }, { type: i1$1.QuickOrderFacade }, { type: i5.QuickOrderStatePersistenceService }]; }, propDecorators: { quickOrderForm: [{\n                type: ViewChild,\n                args: ['quickOrderForm']\n            }] } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderListModule {\n}\nQuickOrderListModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderListModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuickOrderListModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderListModule, declarations: [QuickOrderComponent,\n        QuickOrderFormComponent,\n        QuickOrderItemComponent,\n        QuickOrderTableComponent], imports: [AtMessageModule,\n        CommonModule,\n        FormErrorsModule,\n        I18nModule,\n        IconModule,\n        ItemCounterModule,\n        MediaModule,\n        MessageComponentModule,\n        ProgressButtonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule], exports: [QuickOrderComponent,\n        QuickOrderFormComponent,\n        QuickOrderItemComponent,\n        QuickOrderTableComponent] });\nQuickOrderListModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderListModule, providers: [\n        provideDefaultConfig({\n            cmsComponents: {\n                QuickOrderComponent: {\n                    component: QuickOrderComponent,\n                    data: {\n                        quickOrderListLimit: 10,\n                    },\n                },\n            },\n        }),\n    ], imports: [AtMessageModule,\n        CommonModule,\n        FormErrorsModule,\n        I18nModule,\n        IconModule,\n        ItemCounterModule,\n        MediaModule,\n        MessageComponentModule,\n        ProgressButtonModule,\n        ReactiveFormsModule,\n        RouterModule,\n        UrlModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderListModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        AtMessageModule,\n                        CommonModule,\n                        FormErrorsModule,\n                        I18nModule,\n                        IconModule,\n                        ItemCounterModule,\n                        MediaModule,\n                        MessageComponentModule,\n                        ProgressButtonModule,\n                        ReactiveFormsModule,\n                        RouterModule,\n                        UrlModule,\n                    ],\n                    providers: [\n                        provideDefaultConfig({\n                            cmsComponents: {\n                                QuickOrderComponent: {\n                                    component: QuickOrderComponent,\n                                    data: {\n                                        quickOrderListLimit: 10,\n                                    },\n                                },\n                            },\n                        }),\n                    ],\n                    declarations: [\n                        QuickOrderComponent,\n                        QuickOrderFormComponent,\n                        QuickOrderItemComponent,\n                        QuickOrderTableComponent,\n                    ],\n                    exports: [\n                        QuickOrderComponent,\n                        QuickOrderFormComponent,\n                        QuickOrderItemComponent,\n                        QuickOrderTableComponent,\n                    ],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderComponentsModule {\n}\nQuickOrderComponentsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponentsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuickOrderComponentsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponentsModule, imports: [RouterModule, QuickOrderListModule, CartQuickOrderFormModule] });\nQuickOrderComponentsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponentsModule, providers: [\n        {\n            provide: QuickOrderOrderEntriesContextToken,\n            useExisting: QuickOrderOrderEntriesContext,\n        },\n    ], imports: [RouterModule, QuickOrderListModule, CartQuickOrderFormModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderComponentsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [RouterModule, QuickOrderListModule, CartQuickOrderFormModule],\n                    providers: [\n                        {\n                            provide: QuickOrderOrderEntriesContextToken,\n                            useExisting: QuickOrderOrderEntriesContext,\n                        },\n                    ],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CartQuickOrderFormComponent, CartQuickOrderFormModule, QuickOrderComponent, QuickOrderComponentsModule, QuickOrderFormComponent, QuickOrderItemComponent, QuickOrderListModule, QuickOrderOrderEntriesContext, QuickOrderTableComponent };\n","import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i1$1 from '@spartacus/cart/quick-order/root';\nimport { defaultQuickOrderConfig, QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport * as i1 from '@spartacus/cart/base/root';\nimport { CartAddEntrySuccessEvent, CartAddEntryFailEvent } from '@spartacus/cart/base/root';\nimport * as i2 from '@spartacus/core';\nimport { HttpErrorModel, BASE_SITE_CONTEXT_ID, StorageSyncType } from '@spartacus/core';\nimport { Subject, BehaviorSubject, of, timer, Subscription } from 'rxjs';\nimport { map, take, first, switchMap, filter, tap } from 'rxjs/operators';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderService {\n    constructor(activeCartService, config, eventService, productSearchConnector) {\n        this.activeCartService = activeCartService;\n        this.config = config;\n        this.eventService = eventService;\n        this.productSearchConnector = productSearchConnector;\n        this.productAdded$ = new Subject();\n        this.entries$ = new BehaviorSubject([]);\n        this.softDeletedEntries$ = new BehaviorSubject({});\n        this.nonPurchasableProductError$ = new BehaviorSubject(null);\n        this.hardDeleteTimeout = this.config.quickOrder?.list?.hardDeleteTimeout || 7000;\n        this.quickOrderListLimit = 0;\n        this.clearDeleteTimeouts = {};\n    }\n    ngOnDestroy() {\n        this.clearDeletedEntries();\n    }\n    /**\n     * Get entries\n     */\n    getEntries() {\n        return this.entries$;\n    }\n    /**\n     * Search products using query\n     */\n    searchProducts(query, maxProducts) {\n        // TODO(#14059): Remove condition\n        if (this.productSearchConnector) {\n            const searchConfig = {\n                pageSize: maxProducts ||\n                    defaultQuickOrderConfig.quickOrder?.searchForm?.maxProducts,\n            };\n            return this.productSearchConnector\n                .search(query, searchConfig)\n                .pipe(map((searchPage) => searchPage.products || []));\n        }\n        else {\n            return of([]);\n        }\n    }\n    /**\n     * Clear a list of added entries\n     */\n    clearList() {\n        this.entries$.next([]);\n    }\n    /**\n     * Get information about the possibility to add the next product\n     */\n    canAdd(code, productData) {\n        if (code && productData) {\n            return of(this.isProductOnTheList(code) ||\n                !this.isLimitExceeded(code, productData));\n        }\n        else if (code) {\n            return of(this.isProductOnTheList(code) || !this.isLimitExceeded());\n        }\n        else {\n            return of(!this.isLimitExceeded());\n        }\n    }\n    /**\n     * Set quick order list limit property\n     */\n    setListLimit(limit) {\n        this.quickOrderListLimit = limit;\n    }\n    /**\n     * Load a list of entries\n     */\n    loadEntries(entries = []) {\n        this.entries$.next(entries);\n    }\n    /**\n     * Load a list of entries\n     */\n    updateEntryQuantity(entryIndex, quantity) {\n        const entries = this.entries$.getValue() || [];\n        entries[entryIndex].quantity = quantity;\n        this.entries$.next(entries);\n    }\n    /**\n     * Delete single entry from the list\n     */\n    softDeleteEntry(index) {\n        this.entries$.pipe(take(1)).subscribe((entries) => {\n            const entriesList = entries;\n            this.addSoftEntryDeletion(entriesList[index], true);\n            entriesList.splice(index, 1);\n            this.entries$.next(entriesList);\n        });\n    }\n    /**\n     * Add product to the quick order list\n     */\n    addProduct(product, quantity = 1) {\n        const entry = this.generateOrderEntry(product, quantity);\n        this.addEntry(entry);\n    }\n    /**\n     * Return product added subject\n     */\n    getProductAdded() {\n        return this.productAdded$;\n    }\n    /**\n     * Set product added subject\n     */\n    setProductAdded(productCode) {\n        this.productAdded$.next(productCode);\n    }\n    /**\n     * Adding to cart all products from the list\n     */\n    addToCart() {\n        let entries = [];\n        const events = [];\n        const subscription = this.eventService\n            .get(CartAddEntrySuccessEvent)\n            .subscribe((cartEvent) => {\n            if (cartEvent.quantityAdded === 0 ||\n                (!!cartEvent.quantityAdded &&\n                    cartEvent.quantityAdded < cartEvent.quantity)) {\n                events.push(this.createQuickOrderResultEvent(cartEvent));\n            }\n        });\n        subscription.add(this.eventService\n            .get(CartAddEntryFailEvent)\n            .subscribe((cartEvent) => {\n            events.push(this.createQuickOrderResultEvent(cartEvent));\n        }));\n        return this.getEntries().pipe(first(), switchMap((elements) => {\n            entries = elements;\n            this.activeCartService.addEntries(elements);\n            this.clearList();\n            return this.activeCartService.isStable();\n        }), filter((isStable) => isStable), map(() => [entries, events]), tap(() => subscription.unsubscribe()));\n    }\n    /**\n     * Return soft deleted entries\n     */\n    getSoftDeletedEntries() {\n        return this.softDeletedEntries$;\n    }\n    /**\n     * Restore soft deleted entry\n     */\n    restoreSoftDeletedEntry(productCode) {\n        const entry = this.getSoftDeletedEntry(productCode);\n        this.addEntry(entry);\n        this.hardDeleteEntry(productCode);\n    }\n    /**\n     * Clear deleted entry from the list\n     */\n    hardDeleteEntry(productCode) {\n        const entry = this.getSoftDeletedEntry(productCode);\n        const deletedEntries = this.softDeletedEntries$.getValue();\n        if (entry) {\n            delete deletedEntries[productCode];\n            this.softDeletedEntries$.next(deletedEntries);\n        }\n        this.clearDeleteTimeout(productCode);\n    }\n    /**\n     * Clear all deleted entries and timeout subscriptions\n     */\n    clearDeletedEntries() {\n        Object.values(this.clearDeleteTimeouts).forEach((subscription) => subscription.unsubscribe());\n        this.softDeletedEntries$.next({});\n        this.clearDeleteTimeouts = {};\n    }\n    /**\n     *  Return non purchasable product error\n     */\n    getNonPurchasableProductError() {\n        return this.nonPurchasableProductError$;\n    }\n    /**\n     * Set error that selected product is not purchasable\n     */\n    setNonPurchasableProductError(product) {\n        this.nonPurchasableProductError$.next(product);\n    }\n    /**\n     * Clear not purchasable product error\n     */\n    clearNonPurchasableProductError() {\n        this.nonPurchasableProductError$.next(null);\n    }\n    /**\n     * Add soft deleted entry to the cached list\n     */\n    addSoftEntryDeletion(entry, clearTimeout = true) {\n        const deletedEntries = this.softDeletedEntries$.getValue();\n        const productCode = entry?.product?.code;\n        if (productCode) {\n            deletedEntries[productCode] = entry;\n            this.softDeletedEntries$.next(deletedEntries);\n            if (clearTimeout) {\n                const subscription = timer(this.hardDeleteTimeout).subscribe(() => {\n                    this.hardDeleteEntry(productCode);\n                });\n                this.clearDeleteTimeouts[productCode] = subscription;\n            }\n        }\n    }\n    /**\n     * Get soft deletion entry\n     */\n    getSoftDeletedEntry(productCode) {\n        const deletedEntries = this.softDeletedEntries$.getValue();\n        return deletedEntries[productCode];\n    }\n    /**\n     * Generate Order Entry from Product\n     */\n    generateOrderEntry(product, quantity) {\n        return {\n            basePrice: product.price,\n            product,\n            quantity,\n            totalPrice: product.price,\n        };\n    }\n    /**\n     * Add single entry to the list\n     */\n    addEntry(entry) {\n        if (entry?.product?.code &&\n            !this.isProductOnTheList(entry.product.code) &&\n            this.isLimitExceeded()) {\n            return;\n        }\n        const entries = this.entries$.getValue() || [];\n        const entryStockLevel = entry.product?.stock?.stockLevel;\n        if (entryStockLevel && entry.quantity && entry.quantity > entryStockLevel) {\n            entry.quantity = entryStockLevel;\n        }\n        if (entry.product?.code && this.isProductOnTheList(entry.product.code)) {\n            const entryIndex = entries.findIndex((item) => item.product?.code === entry.product?.code);\n            const quantity = entries[entryIndex].quantity;\n            if (quantity && entry.quantity) {\n                entries[entryIndex].quantity = quantity + entry?.quantity;\n                const newQuantity = entries[entryIndex].quantity;\n                if (newQuantity && entryStockLevel && newQuantity > entryStockLevel) {\n                    entries[entryIndex].quantity = entryStockLevel;\n                }\n                this.entries$.next([...entries]);\n            }\n        }\n        else {\n            this.entries$.next([...entries, ...[entry]]);\n        }\n        this.productAdded$.next(entry.product?.code);\n    }\n    /**\n     * Verify if product is already on the list\n     */\n    isProductOnTheList(productCode) {\n        const entries = this.entries$.getValue() || [];\n        return !!entries.find((item) => item.product?.code === productCode);\n    }\n    isLimitExceeded(code, productsData) {\n        const entries = this.entries$.getValue() || [];\n        /**\n         * Used to offset the amount of existing entries with the index of the missing\n         * entry to be added. We can use this offset to see if adding the missing product\n         * would hit the list limit before we attempt to add it.\n         */\n        const missingProductIndex = code && productsData\n            ? this.getMissingProductIndex(entries, code, productsData)\n            : 0;\n        return (entries.length + (missingProductIndex || 0) >= this.quickOrderListLimit);\n    }\n    /**\n     * Get the index of the missing product in the productsData array identified by code\n     * from the entries array.\n     */\n    getMissingProductIndex(entries, code, productsData) {\n        const missingProducts = productsData?.filter((product) => !entries\n            .map((entry) => entry.product?.code)\n            .includes(product.productCode)) || [];\n        return missingProducts.findIndex((product) => product.productCode === code);\n    }\n    createQuickOrderResultEvent(cartEvent) {\n        const evt = {\n            productCode: cartEvent.productCode,\n            quantity: cartEvent.quantity,\n        };\n        if ('entry' in cartEvent) {\n            evt.entry = cartEvent.entry;\n        }\n        if ('quantityAdded' in cartEvent) {\n            evt.quantityAdded = cartEvent.quantityAdded;\n        }\n        if ('error' in cartEvent && cartEvent.error instanceof HttpErrorModel) {\n            evt.error = cartEvent.error;\n        }\n        if (evt.error?.details?.length) {\n            const isOutOfStock = evt.error?.details.some((e) => e.type === 'InsufficientStockError');\n            evt.quantityAdded = isOutOfStock ? 0 : evt.quantity;\n        }\n        return evt;\n    }\n    clearDeleteTimeout(productCode) {\n        const clearMessageTimout = this.clearDeleteTimeouts[productCode];\n        if (clearMessageTimout) {\n            clearMessageTimout.unsubscribe();\n            delete this.clearDeleteTimeouts[productCode];\n        }\n    }\n}\nQuickOrderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderService, deps: [{ token: i1.ActiveCartFacade }, { token: i2.Config }, { token: i2.EventService }, { token: i2.ProductSearchConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nQuickOrderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderService });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderService, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.ActiveCartFacade }, { type: i2.Config }, { type: i2.EventService }, { type: i2.ProductSearchConnector }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nconst facadeProviders = [\n    QuickOrderService,\n    {\n        provide: QuickOrderFacade,\n        useExisting: QuickOrderService,\n    },\n];\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderStatePersistenceService {\n    constructor(quickOrderService, siteContextParamsService, statePersistenceService) {\n        this.quickOrderService = quickOrderService;\n        this.siteContextParamsService = siteContextParamsService;\n        this.statePersistenceService = statePersistenceService;\n        this.subscription = new Subscription();\n        /**\n         * Identifier used for storage key.\n         */\n        this.key = 'quick-order';\n    }\n    /**\n     * Initializes the synchronization between state and browser storage.\n     */\n    initSync() {\n        this.subscription.add(this.statePersistenceService.syncWithStorage({\n            key: this.key,\n            state$: this.quickOrderService.getEntries(),\n            context$: this.siteContextParamsService.getValues([\n                BASE_SITE_CONTEXT_ID,\n            ]),\n            storageType: StorageSyncType.SESSION_STORAGE,\n            onRead: (state) => this.onRead(state),\n        }));\n    }\n    onRead(state) {\n        if (state) {\n            this.quickOrderService.loadEntries(state);\n        }\n    }\n    ngOnDestroy() {\n        this.subscription.unsubscribe();\n    }\n}\nQuickOrderStatePersistenceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderStatePersistenceService, deps: [{ token: i1$1.QuickOrderFacade }, { token: i2.SiteContextParamsService }, { token: i2.StatePersistenceService }], target: i0.ɵɵFactoryTarget.Injectable });\nQuickOrderStatePersistenceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderStatePersistenceService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderStatePersistenceService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.QuickOrderFacade }, { type: i2.SiteContextParamsService }, { type: i2.StatePersistenceService }]; } });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderCoreModule {\n    static forRoot() {\n        return {\n            ngModule: QuickOrderCoreModule,\n        };\n    }\n}\nQuickOrderCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuickOrderCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderCoreModule });\nQuickOrderCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderCoreModule, providers: [...facadeProviders, QuickOrderStatePersistenceService] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [...facadeProviders, QuickOrderStatePersistenceService],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuickOrderCoreModule, QuickOrderService, QuickOrderStatePersistenceService };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { QuickOrderComponentsModule } from '@spartacus/cart/quick-order/components';\nimport { QuickOrderCoreModule } from '@spartacus/cart/quick-order/core';\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nclass QuickOrderModule {\n}\nQuickOrderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuickOrderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderModule, imports: [QuickOrderCoreModule, QuickOrderComponentsModule] });\nQuickOrderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderModule, imports: [QuickOrderCoreModule, QuickOrderComponentsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.4\", ngImport: i0, type: QuickOrderModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [QuickOrderCoreModule, QuickOrderComponentsModule],\n                }]\n        }] });\n\n/*\n * SPDX-FileCopyrightText: 2023 SAP Spartacus team <spartacus-team@sap.com>\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QuickOrderModule };\n"],"names":["i0","Component","ChangeDetectionStrategy","NgModule","inject","isDevMode","Injectable","Input","ViewChild","i3","Validators","ReactiveFormsModule","UntypedFormGroup","UntypedFormControl","i1","CartAddEntrySuccessEvent","CartAddEntryFailEvent","OrderEntriesSource","ProductImportStatus","i2","GlobalMessageType","I18nModule","provideDefaultConfig","LoggerService","UrlModule","Subscription","merge","of","combineLatest","BehaviorSubject","map","first","switchMap","filter","tap","catchError","mergeAll","take","distinctUntilChanged","debounceTime","i6","CommonModule","i2$1","FormErrorsModule","ICON_TYPE","AtMessageModule","IconModule","ItemCounterModule","MediaModule","MessageComponentModule","ProgressButtonModule","i1$1","QuickOrderOrderEntriesContextToken","i4","RouterModule","i5","CartQuickOrderFormComponent","constructor","activeCartService","eventService","formBuilder","globalMessageService","cartIsLoading$","isStable","pipe","loaded","cart$","getActive","min","subscription","cartEventsSubscription","minQuantityValue","ngOnInit","buildForm","watchQuantityChange","ngOnDestroy","unsubscribe","applyQuickOrder","quickOrderForm","invalid","markAllAsTouched","productCode","get","value","quantity","watchAddEntrySuccessEvent","watchAddEntryFailEvent","addEntry","group","required","updateOn","validators","add","valueChanges","subscribe","setValue","getValidCount","emitEvent","data","key","productTranslation","messageType","MSG_TYPE_WARNING","quantityAdded","MSG_TYPE_CONFIRMATION","params","product","entry","name","resetForm","MSG_TYPE_ERROR","reset","ɵfac","ActiveCartFacade","EventService","UntypedFormBuilder","GlobalMessageService","ɵcmp","NgIf","ɵNgNoValidate","DefaultValueAccessor","NumberValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","FormErrorsComponent","AsyncPipe","TranslatePipe","type","args","selector","changeDetection","OnPush","template","CartQuickOrderFormModule","ɵmod","ɵinj","cmsComponents","component","imports","providers","declarations","exports","QuickOrderOrderEntriesContext","quickOrderService","productConnector","QUICK_ORDER","logger","getEntries","addEntries","productsData","productData","canAdd","addProduct","handleResults","response","handleErrors","statusCode","LIMIT_EXCEEDED","length","stock","stockLevel","productName","LOW_STOCK","stockLevelStatus","NO_STOCK","SUCCESS","error","errors","UNKNOWN_IDENTIFIER","warn","UNKNOWN_ERROR","QuickOrderFacade","ProductConnector","ɵprov","providedIn","SEARCH_BOX_ACTIVE_CLASS","QuickOrderFormComponent","config","cd","winRef","iconTypes","isSearching","noResults","results","searchSubscription","watchProductAdd","watchQueryChange","onBlur","event","setTimeout","isSuggestionFocused","blurSuggestionBox","clear","preventDefault","isResultsBoxOpen","toggleBodyClass","form","close","detectChanges","multidimensional","setNonPurchasableProductError","clearNonPurchasableProductError","getFocusedIndex","focusNextChild","focusedIndex","getResultElements","focus","focusPreviousChild","document","querySelector","canAddProduct","open","Array","from","querySelectorAll","target","blur","getFocusedElement","activeElement","indexOf","includes","className","undefined","body","classList","toggle","remove","setControl","isEmpty","string","trim","quickOrder","searchForm","minCharactersBeforeRequest","searchProducts","query","Boolean","maxProducts","products","clearResults","resetSearchSubscription","getProductAdded","Config","ChangeDetectorRef","WindowRef","NgForOf","IconComponent","MediaComponent","limit","QuickOrderItemComponent","_entry","quantityControl","loading","updateEntryQuantity","index","removeEntry","softDeleteEntry","code","NgClass","ItemCounterComponent","RouterLink","UrlPipe","QuickOrderTableComponent","entries","QuickOrderComponent","quickOrderStatePersistenceService","quickOrderListLimit$","data$","quickOrderListLimit","setListLimit","isCartStable$","getActiveCartId","activeCartId","globalMessageType","cartErrors$","cartWarnings$","cartSuccesses$","showAddToCartInformation$","nonPurchasableProductError$","cartId$","entries$","initSync","clearDeletedEntries","errors$","asObservable","warnings$","successes$","nonPurchasableError$","getNonPurchasableProductError","addToCartInformation$","softDeletedEntries$","getSoftDeletedEntries","clearList","MSG_TYPE_INFO","addToCart","orderEntries","next","clearStatuses","forEach","err","find","e","extractErrors","extractWarnings","showAddedToCartSuccessMessage","extractSuccesses","clearErrors","clearWarnings","clearSuccesses","clearAddToCartInformation","undoDeletion","restoreSoftDeletedEntry","clearDeletion","hardDeleteEntry","clearNonPurchasableError","noAddedEntries","setErrors","warnings","setWarnings","successAddedEntries","element","push","setSuccesses","CmsComponentData","QuickOrderStatePersistenceService","MessageComponent","ProgressButtonComponent","KeyValuePipe","QuickOrderListModule","QuickOrderComponentsModule","provide","useExisting","defaultQuickOrderConfig","HttpErrorModel","BASE_SITE_CONTEXT_ID","StorageSyncType","Subject","timer","QuickOrderService","productSearchConnector","productAdded$","hardDeleteTimeout","list","clearDeleteTimeouts","searchConfig","pageSize","search","searchPage","isProductOnTheList","isLimitExceeded","loadEntries","entryIndex","getValue","entriesList","addSoftEntryDeletion","splice","generateOrderEntry","setProductAdded","events","cartEvent","createQuickOrderResultEvent","elements","getSoftDeletedEntry","deletedEntries","clearDeleteTimeout","Object","values","clearTimeout","basePrice","price","totalPrice","entryStockLevel","findIndex","item","newQuantity","missingProductIndex","getMissingProductIndex","missingProducts","evt","details","isOutOfStock","some","clearMessageTimout","ProductSearchConnector","facadeProviders","siteContextParamsService","statePersistenceService","syncWithStorage","state$","context$","getValues","storageType","SESSION_STORAGE","onRead","state","SiteContextParamsService","StatePersistenceService","QuickOrderCoreModule","forRoot","ngModule","QuickOrderModule"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,2]}